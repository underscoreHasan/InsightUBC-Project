{"/home/c/clee69/cs310/project/project_team086/src/controller/IInsightFacade.ts":{"path":"/home/c/clee69/cs310/project/project_team086/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":62,"6":62,"7":1,"8":5,"9":5,"10":1,"11":1,"12":1,"13":1},"f":{"0":1,"1":62,"2":5,"3":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/home/c/clee69/cs310/project/project_team086/src/controller/IInsightFacade.ts","sources":["/home/c/clee69/cs310/project/project_team086/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAUD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport type InsightResult = Record<string, string | number>;\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"35c2127f89a4691cac9eb9307b627b2cf98eb948","contentHash":"72735fd796b4ce522a65fa4c840cfafbff87c180a49a06a51655027f534d4b06"},"/home/c/clee69/cs310/project/project_team086/src/controller/InsightFacade.ts":{"path":"/home/c/clee69/cs310/project/project_team086/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":52}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":49}},"6":{"start":{"line":9,"column":18},"end":{"line":9,"column":55}},"7":{"start":{"line":10,"column":18},"end":{"line":10,"column":55}},"8":{"start":{"line":11,"column":18},"end":{"line":11,"column":38}},"9":{"start":{"line":12,"column":19},"end":{"line":12,"column":55}},"10":{"start":{"line":13,"column":15},"end":{"line":13,"column":47}},"11":{"start":{"line":14,"column":22},"end":{"line":14,"column":46}},"12":{"start":{"line":15,"column":38},"end":{"line":15,"column":78}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":64}},"14":{"start":{"line":18,"column":17},"end":{"line":18,"column":19}},"15":{"start":{"line":19,"column":15},"end":{"line":19,"column":17}},"16":{"start":{"line":21,"column":8},"end":{"line":21,"column":82}},"17":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"18":{"start":{"line":23,"column":12},"end":{"line":23,"column":71}},"19":{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},"20":{"start":{"line":27,"column":12},"end":{"line":27,"column":46}},"21":{"start":{"line":30,"column":12},"end":{"line":30,"column":37}},"22":{"start":{"line":32,"column":30},"end":{"line":32,"column":61}},"23":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"24":{"start":{"line":34,"column":12},"end":{"line":34,"column":73}},"25":{"start":{"line":36,"column":31},"end":{"line":36,"column":73}},"26":{"start":{"line":37,"column":8},"end":{"line":42,"column":9}},"27":{"start":{"line":38,"column":12},"end":{"line":38,"column":75}},"28":{"start":{"line":41,"column":12},"end":{"line":41,"column":87}},"29":{"start":{"line":43,"column":8},"end":{"line":43,"column":31}},"30":{"start":{"line":46,"column":22},"end":{"line":46,"column":43}},"31":{"start":{"line":47,"column":8},"end":{"line":47,"column":89}},"32":{"start":{"line":50,"column":8},"end":{"line":60,"column":9}},"33":{"start":{"line":51,"column":12},"end":{"line":51,"column":78}},"34":{"start":{"line":54,"column":12},"end":{"line":59,"column":13}},"35":{"start":{"line":55,"column":16},"end":{"line":55,"column":93}},"36":{"start":{"line":58,"column":16},"end":{"line":58,"column":86}},"37":{"start":{"line":63,"column":8},"end":{"line":68,"column":9}},"38":{"start":{"line":64,"column":12},"end":{"line":64,"column":89}},"39":{"start":{"line":67,"column":12},"end":{"line":67,"column":82}},"40":{"start":{"line":71,"column":26},"end":{"line":71,"column":130}},"41":{"start":{"line":71,"column":70},"end":{"line":71,"column":129}},"42":{"start":{"line":72,"column":32},"end":{"line":72,"column":98}},"43":{"start":{"line":72,"column":66},"end":{"line":72,"column":97}},"44":{"start":{"line":73,"column":31},"end":{"line":73,"column":65}},"45":{"start":{"line":74,"column":8},"end":{"line":74,"column":37}},"46":{"start":{"line":77,"column":21},"end":{"line":77,"column":40}},"47":{"start":{"line":78,"column":8},"end":{"line":85,"column":9}},"48":{"start":{"line":79,"column":32},"end":{"line":79,"column":56}},"49":{"start":{"line":80,"column":31},"end":{"line":80,"column":54}},"50":{"start":{"line":81,"column":12},"end":{"line":81,"column":57}},"51":{"start":{"line":84,"column":12},"end":{"line":84,"column":89}},"52":{"start":{"line":88,"column":8},"end":{"line":92,"column":9}},"53":{"start":{"line":89,"column":12},"end":{"line":91,"column":55}},"54":{"start":{"line":90,"column":34},"end":{"line":90,"column":69}},"55":{"start":{"line":91,"column":37},"end":{"line":91,"column":53}},"56":{"start":{"line":93,"column":8},"end":{"line":93,"column":18}},"57":{"start":{"line":96,"column":8},"end":{"line":109,"column":9}},"58":{"start":{"line":106,"column":50},"end":{"line":106,"column":54}},"59":{"start":{"line":107,"column":25},"end":{"line":107,"column":101}},"60":{"start":{"line":108,"column":12},"end":{"line":108,"column":182}},"61":{"start":{"line":110,"column":8},"end":{"line":110,"column":20}},"62":{"start":{"line":113,"column":31},"end":{"line":113,"column":56}},"63":{"start":{"line":114,"column":8},"end":{"line":116,"column":9}},"64":{"start":{"line":115,"column":12},"end":{"line":115,"column":47}},"65":{"start":{"line":117,"column":8},"end":{"line":117,"column":33}},"66":{"start":{"line":118,"column":8},"end":{"line":118,"column":43}},"67":{"start":{"line":119,"column":8},"end":{"line":119,"column":30}},"68":{"start":{"line":122,"column":8},"end":{"line":122,"column":82}},"69":{"start":{"line":123,"column":22},"end":{"line":123,"column":43}},"70":{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},"71":{"start":{"line":125,"column":12},"end":{"line":125,"column":87}},"72":{"start":{"line":127,"column":22},"end":{"line":127,"column":49}},"73":{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},"74":{"start":{"line":129,"column":12},"end":{"line":129,"column":75}},"75":{"start":{"line":131,"column":8},"end":{"line":131,"column":41}},"76":{"start":{"line":132,"column":8},"end":{"line":132,"column":39}},"77":{"start":{"line":133,"column":8},"end":{"line":133,"column":61}},"78":{"start":{"line":134,"column":25},"end":{"line":134,"column":76}},"79":{"start":{"line":135,"column":8},"end":{"line":135,"column":50}},"80":{"start":{"line":136,"column":8},"end":{"line":136,"column":18}},"81":{"start":{"line":139,"column":29},"end":{"line":139,"column":64}},"82":{"start":{"line":140,"column":25},"end":{"line":140,"column":55}},"83":{"start":{"line":141,"column":32},"end":{"line":141,"column":87}},"84":{"start":{"line":142,"column":29},"end":{"line":142,"column":95}},"85":{"start":{"line":143,"column":8},"end":{"line":143,"column":28}},"86":{"start":{"line":146,"column":8},"end":{"line":146,"column":45}},"87":{"start":{"line":147,"column":29},"end":{"line":147,"column":66}},"88":{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},"89":{"start":{"line":149,"column":12},"end":{"line":149,"column":84}},"90":{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},"91":{"start":{"line":152,"column":12},"end":{"line":152,"column":82}},"92":{"start":{"line":154,"column":8},"end":{"line":154,"column":28}},"93":{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},"94":{"start":{"line":158,"column":12},"end":{"line":158,"column":28}},"95":{"start":{"line":160,"column":31},"end":{"line":160,"column":79}},"96":{"start":{"line":161,"column":8},"end":{"line":163,"column":11}},"97":{"start":{"line":162,"column":12},"end":{"line":162,"column":52}},"98":{"start":{"line":166,"column":31},"end":{"line":173,"column":10}},"99":{"start":{"line":167,"column":27},"end":{"line":167,"column":29}},"100":{"start":{"line":168,"column":28},"end":{"line":168,"column":60}},"101":{"start":{"line":169,"column":12},"end":{"line":171,"column":15}},"102":{"start":{"line":170,"column":16},"end":{"line":170,"column":49}},"103":{"start":{"line":172,"column":12},"end":{"line":172,"column":26}},"104":{"start":{"line":174,"column":33},"end":{"line":174,"column":47}},"105":{"start":{"line":175,"column":8},"end":{"line":177,"column":9}},"106":{"start":{"line":176,"column":12},"end":{"line":176,"column":112}},"107":{"start":{"line":178,"column":27},"end":{"line":178,"column":45}},"108":{"start":{"line":179,"column":8},"end":{"line":181,"column":9}},"109":{"start":{"line":180,"column":12},"end":{"line":180,"column":129}},"110":{"start":{"line":182,"column":8},"end":{"line":182,"column":76}},"111":{"start":{"line":185,"column":23},"end":{"line":185,"column":25}},"112":{"start":{"line":186,"column":23},"end":{"line":186,"column":27}},"113":{"start":{"line":187,"column":24},"end":{"line":187,"column":45}},"114":{"start":{"line":188,"column":8},"end":{"line":199,"column":11}},"115":{"start":{"line":189,"column":29},"end":{"line":189,"column":31}},"116":{"start":{"line":190,"column":12},"end":{"line":197,"column":13}},"117":{"start":{"line":191,"column":16},"end":{"line":196,"column":17}},"118":{"start":{"line":192,"column":20},"end":{"line":192,"column":63}},"119":{"start":{"line":195,"column":20},"end":{"line":195,"column":42}},"120":{"start":{"line":198,"column":12},"end":{"line":198,"column":34}},"121":{"start":{"line":200,"column":8},"end":{"line":202,"column":9}},"122":{"start":{"line":201,"column":12},"end":{"line":201,"column":79}},"123":{"start":{"line":203,"column":8},"end":{"line":203,"column":22}},"124":{"start":{"line":206,"column":24},"end":{"line":206,"column":45}},"125":{"start":{"line":207,"column":23},"end":{"line":207,"column":25}},"126":{"start":{"line":208,"column":8},"end":{"line":212,"column":11}},"127":{"start":{"line":209,"column":12},"end":{"line":211,"column":13}},"128":{"start":{"line":210,"column":16},"end":{"line":210,"column":50}},"129":{"start":{"line":213,"column":8},"end":{"line":222,"column":9}},"130":{"start":{"line":214,"column":26},"end":{"line":214,"column":53}},"131":{"start":{"line":215,"column":12},"end":{"line":221,"column":13}},"132":{"start":{"line":216,"column":16},"end":{"line":220,"column":19}},"133":{"start":{"line":217,"column":35},"end":{"line":217,"column":62}},"134":{"start":{"line":218,"column":34},"end":{"line":218,"column":62}},"135":{"start":{"line":219,"column":20},"end":{"line":219,"column":53}},"136":{"start":{"line":223,"column":8},"end":{"line":223,"column":22}},"137":{"start":{"line":226,"column":8},"end":{"line":228,"column":9}},"138":{"start":{"line":227,"column":12},"end":{"line":227,"column":81}},"139":{"start":{"line":229,"column":8},"end":{"line":231,"column":9}},"140":{"start":{"line":230,"column":12},"end":{"line":230,"column":75}},"141":{"start":{"line":234,"column":8},"end":{"line":236,"column":9}},"142":{"start":{"line":235,"column":12},"end":{"line":235,"column":71}},"143":{"start":{"line":237,"column":8},"end":{"line":239,"column":9}},"144":{"start":{"line":238,"column":12},"end":{"line":238,"column":73}},"145":{"start":{"line":240,"column":24},"end":{"line":240,"column":44}},"146":{"start":{"line":241,"column":8},"end":{"line":243,"column":9}},"147":{"start":{"line":242,"column":12},"end":{"line":242,"column":73}},"148":{"start":{"line":244,"column":8},"end":{"line":249,"column":9}},"149":{"start":{"line":245,"column":12},"end":{"line":245,"column":77}},"150":{"start":{"line":248,"column":12},"end":{"line":248,"column":49}},"151":{"start":{"line":252,"column":22},"end":{"line":252,"column":24}},"152":{"start":{"line":253,"column":8},"end":{"line":257,"column":11}},"153":{"start":{"line":254,"column":12},"end":{"line":256,"column":13}},"154":{"start":{"line":255,"column":16},"end":{"line":255,"column":48}},"155":{"start":{"line":258,"column":8},"end":{"line":258,"column":23}},"156":{"start":{"line":261,"column":24},"end":{"line":261,"column":39}},"157":{"start":{"line":262,"column":28},"end":{"line":262,"column":49}},"158":{"start":{"line":263,"column":8},"end":{"line":271,"column":11}},"159":{"start":{"line":264,"column":31},"end":{"line":264,"column":47}},"160":{"start":{"line":265,"column":33},"end":{"line":265,"column":46}},"161":{"start":{"line":266,"column":29},"end":{"line":266,"column":42}},"162":{"start":{"line":267,"column":12},"end":{"line":269,"column":13}},"163":{"start":{"line":268,"column":16},"end":{"line":268,"column":78}},"164":{"start":{"line":270,"column":12},"end":{"line":270,"column":41}},"165":{"start":{"line":272,"column":22},"end":{"line":272,"column":35}},"166":{"start":{"line":273,"column":8},"end":{"line":280,"column":9}},"167":{"start":{"line":274,"column":12},"end":{"line":276,"column":13}},"168":{"start":{"line":275,"column":16},"end":{"line":275,"column":91}},"169":{"start":{"line":277,"column":12},"end":{"line":279,"column":13}},"170":{"start":{"line":278,"column":16},"end":{"line":278,"column":99}},"171":{"start":{"line":281,"column":8},"end":{"line":281,"column":29}},"172":{"start":{"line":284,"column":8},"end":{"line":284,"column":82}},"173":{"start":{"line":285,"column":8},"end":{"line":289,"column":12}},"174":{"start":{"line":285,"column":47},"end":{"line":289,"column":9}},"175":{"start":{"line":292,"column":0},"end":{"line":292,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":41},"end":{"line":44,"column":5}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":16},"end":{"line":48,"column":5}},"line":45},"3":{"name":"(anonymous_3)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":27},"end":{"line":61,"column":5}},"line":49},"4":{"name":"(anonymous_4)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":24},"end":{"line":69,"column":5}},"line":62},"5":{"name":"(anonymous_5)","decl":{"start":{"line":70,"column":4},"end":{"line":70,"column":5}},"loc":{"start":{"line":70,"column":31},"end":{"line":75,"column":5}},"line":70},"6":{"name":"(anonymous_6)","decl":{"start":{"line":71,"column":56},"end":{"line":71,"column":57}},"loc":{"start":{"line":71,"column":70},"end":{"line":71,"column":129}},"line":71},"7":{"name":"(anonymous_7)","decl":{"start":{"line":72,"column":46},"end":{"line":72,"column":47}},"loc":{"start":{"line":72,"column":66},"end":{"line":72,"column":97}},"line":72},"8":{"name":"(anonymous_8)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":37},"end":{"line":86,"column":5}},"line":76},"9":{"name":"(anonymous_9)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":37},"end":{"line":94,"column":5}},"line":87},"10":{"name":"(anonymous_10)","decl":{"start":{"line":90,"column":21},"end":{"line":90,"column":22}},"loc":{"start":{"line":90,"column":34},"end":{"line":90,"column":69}},"line":90},"11":{"name":"(anonymous_11)","decl":{"start":{"line":91,"column":24},"end":{"line":91,"column":25}},"loc":{"start":{"line":91,"column":37},"end":{"line":91,"column":53}},"line":91},"12":{"name":"(anonymous_12)","decl":{"start":{"line":95,"column":4},"end":{"line":95,"column":5}},"loc":{"start":{"line":95,"column":35},"end":{"line":111,"column":5}},"line":95},"13":{"name":"(anonymous_13)","decl":{"start":{"line":112,"column":4},"end":{"line":112,"column":5}},"loc":{"start":{"line":112,"column":37},"end":{"line":120,"column":5}},"line":112},"14":{"name":"(anonymous_14)","decl":{"start":{"line":121,"column":4},"end":{"line":121,"column":5}},"loc":{"start":{"line":121,"column":28},"end":{"line":137,"column":5}},"line":121},"15":{"name":"(anonymous_15)","decl":{"start":{"line":138,"column":4},"end":{"line":138,"column":5}},"loc":{"start":{"line":138,"column":30},"end":{"line":144,"column":5}},"line":138},"16":{"name":"(anonymous_16)","decl":{"start":{"line":145,"column":4},"end":{"line":145,"column":5}},"loc":{"start":{"line":145,"column":35},"end":{"line":155,"column":5}},"line":145},"17":{"name":"(anonymous_17)","decl":{"start":{"line":156,"column":4},"end":{"line":156,"column":5}},"loc":{"start":{"line":156,"column":55},"end":{"line":164,"column":5}},"line":156},"18":{"name":"(anonymous_18)","decl":{"start":{"line":161,"column":31},"end":{"line":161,"column":32}},"loc":{"start":{"line":161,"column":44},"end":{"line":163,"column":9}},"line":161},"19":{"name":"(anonymous_19)","decl":{"start":{"line":165,"column":4},"end":{"line":165,"column":5}},"loc":{"start":{"line":165,"column":66},"end":{"line":183,"column":5}},"line":165},"20":{"name":"(anonymous_20)","decl":{"start":{"line":166,"column":51},"end":{"line":166,"column":52}},"loc":{"start":{"line":166,"column":64},"end":{"line":173,"column":9}},"line":166},"21":{"name":"(anonymous_21)","decl":{"start":{"line":169,"column":28},"end":{"line":169,"column":29}},"loc":{"start":{"line":169,"column":40},"end":{"line":171,"column":13}},"line":169},"22":{"name":"(anonymous_22)","decl":{"start":{"line":184,"column":4},"end":{"line":184,"column":5}},"loc":{"start":{"line":184,"column":60},"end":{"line":204,"column":5}},"line":184},"23":{"name":"(anonymous_23)","decl":{"start":{"line":188,"column":29},"end":{"line":188,"column":30}},"loc":{"start":{"line":188,"column":40},"end":{"line":199,"column":9}},"line":188},"24":{"name":"(anonymous_24)","decl":{"start":{"line":205,"column":4},"end":{"line":205,"column":5}},"loc":{"start":{"line":205,"column":32},"end":{"line":224,"column":5}},"line":205},"25":{"name":"(anonymous_25)","decl":{"start":{"line":208,"column":24},"end":{"line":208,"column":25}},"loc":{"start":{"line":208,"column":36},"end":{"line":212,"column":9}},"line":208},"26":{"name":"(anonymous_26)","decl":{"start":{"line":216,"column":30},"end":{"line":216,"column":31}},"loc":{"start":{"line":216,"column":41},"end":{"line":220,"column":17}},"line":216},"27":{"name":"(anonymous_27)","decl":{"start":{"line":225,"column":4},"end":{"line":225,"column":5}},"loc":{"start":{"line":225,"column":36},"end":{"line":232,"column":5}},"line":225},"28":{"name":"(anonymous_28)","decl":{"start":{"line":233,"column":4},"end":{"line":233,"column":5}},"loc":{"start":{"line":233,"column":44},"end":{"line":250,"column":5}},"line":233},"29":{"name":"(anonymous_29)","decl":{"start":{"line":251,"column":4},"end":{"line":251,"column":5}},"loc":{"start":{"line":251,"column":27},"end":{"line":259,"column":5}},"line":251},"30":{"name":"(anonymous_30)","decl":{"start":{"line":253,"column":30},"end":{"line":253,"column":31}},"loc":{"start":{"line":253,"column":43},"end":{"line":257,"column":9}},"line":253},"31":{"name":"(anonymous_31)","decl":{"start":{"line":260,"column":4},"end":{"line":260,"column":5}},"loc":{"start":{"line":260,"column":29},"end":{"line":282,"column":5}},"line":260},"32":{"name":"(anonymous_32)","decl":{"start":{"line":263,"column":24},"end":{"line":263,"column":25}},"loc":{"start":{"line":263,"column":35},"end":{"line":271,"column":9}},"line":263},"33":{"name":"(anonymous_33)","decl":{"start":{"line":283,"column":4},"end":{"line":283,"column":5}},"loc":{"start":{"line":283,"column":25},"end":{"line":290,"column":5}},"line":283},"34":{"name":"(anonymous_34)","decl":{"start":{"line":285,"column":33},"end":{"line":285,"column":34}},"loc":{"start":{"line":285,"column":47},"end":{"line":289,"column":9}},"line":285}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},{"start":{"line":22,"column":8},"end":{"line":24,"column":9}}],"line":22},"4":{"loc":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},{"start":{"line":33,"column":8},"end":{"line":35,"column":9}}],"line":33},"5":{"loc":{"start":{"line":47,"column":15},"end":{"line":47,"column":88}},"type":"binary-expr","locations":[{"start":{"line":47,"column":15},"end":{"line":47,"column":29}},{"start":{"line":47,"column":33},"end":{"line":47,"column":55}},{"start":{"line":47,"column":59},"end":{"line":47,"column":88}}],"line":47},"6":{"loc":{"start":{"line":54,"column":12},"end":{"line":59,"column":13}},"type":"if","locations":[{"start":{"line":54,"column":12},"end":{"line":59,"column":13}},{"start":{"line":54,"column":12},"end":{"line":59,"column":13}}],"line":54},"7":{"loc":{"start":{"line":63,"column":8},"end":{"line":68,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":68,"column":9}},{"start":{"line":63,"column":8},"end":{"line":68,"column":9}}],"line":63},"8":{"loc":{"start":{"line":71,"column":70},"end":{"line":71,"column":129}},"type":"binary-expr","locations":[{"start":{"line":71,"column":70},"end":{"line":71,"column":101}},{"start":{"line":71,"column":105},"end":{"line":71,"column":129}}],"line":71},"9":{"loc":{"start":{"line":88,"column":8},"end":{"line":92,"column":9}},"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":92,"column":9}},{"start":{"line":88,"column":8},"end":{"line":92,"column":9}}],"line":88},"10":{"loc":{"start":{"line":88,"column":12},"end":{"line":88,"column":58}},"type":"binary-expr","locations":[{"start":{"line":88,"column":12},"end":{"line":88,"column":22}},{"start":{"line":88,"column":26},"end":{"line":88,"column":58}}],"line":88},"11":{"loc":{"start":{"line":96,"column":8},"end":{"line":109,"column":9}},"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":109,"column":9}},{"start":{"line":96,"column":8},"end":{"line":109,"column":9}}],"line":96},"12":{"loc":{"start":{"line":96,"column":12},"end":{"line":105,"column":30}},"type":"binary-expr","locations":[{"start":{"line":96,"column":12},"end":{"line":96,"column":27}},{"start":{"line":97,"column":12},"end":{"line":97,"column":31}},{"start":{"line":98,"column":12},"end":{"line":98,"column":30}},{"start":{"line":99,"column":12},"end":{"line":99,"column":34}},{"start":{"line":100,"column":12},"end":{"line":100,"column":32}},{"start":{"line":101,"column":12},"end":{"line":101,"column":29}},{"start":{"line":102,"column":12},"end":{"line":102,"column":28}},{"start":{"line":103,"column":12},"end":{"line":103,"column":29}},{"start":{"line":104,"column":12},"end":{"line":104,"column":29}},{"start":{"line":105,"column":12},"end":{"line":105,"column":30}}],"line":96},"13":{"loc":{"start":{"line":107,"column":25},"end":{"line":107,"column":101}},"type":"cond-expr","locations":[{"start":{"line":107,"column":57},"end":{"line":107,"column":86}},{"start":{"line":107,"column":89},"end":{"line":107,"column":101}}],"line":107},"14":{"loc":{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},"type":"if","locations":[{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},{"start":{"line":124,"column":8},"end":{"line":126,"column":9}}],"line":124},"15":{"loc":{"start":{"line":124,"column":14},"end":{"line":124,"column":54}},"type":"binary-expr","locations":[{"start":{"line":124,"column":14},"end":{"line":124,"column":28}},{"start":{"line":124,"column":32},"end":{"line":124,"column":54}}],"line":124},"16":{"loc":{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},"type":"if","locations":[{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},{"start":{"line":128,"column":8},"end":{"line":130,"column":9}}],"line":128},"17":{"loc":{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},{"start":{"line":148,"column":8},"end":{"line":150,"column":9}}],"line":148},"18":{"loc":{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},"type":"if","locations":[{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},{"start":{"line":151,"column":8},"end":{"line":153,"column":9}}],"line":151},"19":{"loc":{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},{"start":{"line":157,"column":8},"end":{"line":159,"column":9}}],"line":157},"20":{"loc":{"start":{"line":175,"column":8},"end":{"line":177,"column":9}},"type":"if","locations":[{"start":{"line":175,"column":8},"end":{"line":177,"column":9}},{"start":{"line":175,"column":8},"end":{"line":177,"column":9}}],"line":175},"21":{"loc":{"start":{"line":179,"column":8},"end":{"line":181,"column":9}},"type":"if","locations":[{"start":{"line":179,"column":8},"end":{"line":181,"column":9}},{"start":{"line":179,"column":8},"end":{"line":181,"column":9}}],"line":179},"22":{"loc":{"start":{"line":191,"column":16},"end":{"line":196,"column":17}},"type":"if","locations":[{"start":{"line":191,"column":16},"end":{"line":196,"column":17}},{"start":{"line":191,"column":16},"end":{"line":196,"column":17}}],"line":191},"23":{"loc":{"start":{"line":200,"column":8},"end":{"line":202,"column":9}},"type":"if","locations":[{"start":{"line":200,"column":8},"end":{"line":202,"column":9}},{"start":{"line":200,"column":8},"end":{"line":202,"column":9}}],"line":200},"24":{"loc":{"start":{"line":209,"column":12},"end":{"line":211,"column":13}},"type":"if","locations":[{"start":{"line":209,"column":12},"end":{"line":211,"column":13}},{"start":{"line":209,"column":12},"end":{"line":211,"column":13}}],"line":209},"25":{"loc":{"start":{"line":213,"column":8},"end":{"line":222,"column":9}},"type":"if","locations":[{"start":{"line":213,"column":8},"end":{"line":222,"column":9}},{"start":{"line":213,"column":8},"end":{"line":222,"column":9}}],"line":213},"26":{"loc":{"start":{"line":215,"column":12},"end":{"line":221,"column":13}},"type":"if","locations":[{"start":{"line":215,"column":12},"end":{"line":221,"column":13}},{"start":{"line":215,"column":12},"end":{"line":221,"column":13}}],"line":215},"27":{"loc":{"start":{"line":226,"column":8},"end":{"line":228,"column":9}},"type":"if","locations":[{"start":{"line":226,"column":8},"end":{"line":228,"column":9}},{"start":{"line":226,"column":8},"end":{"line":228,"column":9}}],"line":226},"28":{"loc":{"start":{"line":226,"column":12},"end":{"line":226,"column":61}},"type":"binary-expr","locations":[{"start":{"line":226,"column":12},"end":{"line":226,"column":37}},{"start":{"line":226,"column":41},"end":{"line":226,"column":61}}],"line":226},"29":{"loc":{"start":{"line":229,"column":8},"end":{"line":231,"column":9}},"type":"if","locations":[{"start":{"line":229,"column":8},"end":{"line":231,"column":9}},{"start":{"line":229,"column":8},"end":{"line":231,"column":9}}],"line":229},"30":{"loc":{"start":{"line":234,"column":8},"end":{"line":236,"column":9}},"type":"if","locations":[{"start":{"line":234,"column":8},"end":{"line":236,"column":9}},{"start":{"line":234,"column":8},"end":{"line":236,"column":9}}],"line":234},"31":{"loc":{"start":{"line":234,"column":12},"end":{"line":234,"column":63}},"type":"binary-expr","locations":[{"start":{"line":234,"column":12},"end":{"line":234,"column":38}},{"start":{"line":234,"column":42},"end":{"line":234,"column":63}}],"line":234},"32":{"loc":{"start":{"line":237,"column":8},"end":{"line":239,"column":9}},"type":"if","locations":[{"start":{"line":237,"column":8},"end":{"line":239,"column":9}},{"start":{"line":237,"column":8},"end":{"line":239,"column":9}}],"line":237},"33":{"loc":{"start":{"line":241,"column":8},"end":{"line":243,"column":9}},"type":"if","locations":[{"start":{"line":241,"column":8},"end":{"line":243,"column":9}},{"start":{"line":241,"column":8},"end":{"line":243,"column":9}}],"line":241},"34":{"loc":{"start":{"line":244,"column":8},"end":{"line":249,"column":9}},"type":"if","locations":[{"start":{"line":244,"column":8},"end":{"line":249,"column":9}},{"start":{"line":244,"column":8},"end":{"line":249,"column":9}}],"line":244},"35":{"loc":{"start":{"line":254,"column":12},"end":{"line":256,"column":13}},"type":"if","locations":[{"start":{"line":254,"column":12},"end":{"line":256,"column":13}},{"start":{"line":254,"column":12},"end":{"line":256,"column":13}}],"line":254},"36":{"loc":{"start":{"line":267,"column":12},"end":{"line":269,"column":13}},"type":"if","locations":[{"start":{"line":267,"column":12},"end":{"line":269,"column":13}},{"start":{"line":267,"column":12},"end":{"line":269,"column":13}}],"line":267},"37":{"loc":{"start":{"line":267,"column":16},"end":{"line":267,"column":87}},"type":"binary-expr","locations":[{"start":{"line":267,"column":16},"end":{"line":267,"column":47}},{"start":{"line":267,"column":51},"end":{"line":267,"column":87}}],"line":267},"38":{"loc":{"start":{"line":273,"column":8},"end":{"line":280,"column":9}},"type":"if","locations":[{"start":{"line":273,"column":8},"end":{"line":280,"column":9}},{"start":{"line":273,"column":8},"end":{"line":280,"column":9}}],"line":273},"39":{"loc":{"start":{"line":274,"column":12},"end":{"line":276,"column":13}},"type":"if","locations":[{"start":{"line":274,"column":12},"end":{"line":276,"column":13}},{"start":{"line":274,"column":12},"end":{"line":276,"column":13}}],"line":274},"40":{"loc":{"start":{"line":277,"column":12},"end":{"line":279,"column":13}},"type":"if","locations":[{"start":{"line":277,"column":12},"end":{"line":279,"column":13}},{"start":{"line":277,"column":12},"end":{"line":279,"column":13}}],"line":277}},"s":{"0":1,"1":5,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":55,"15":55,"16":62,"17":62,"18":11,"19":51,"20":51,"21":1,"22":50,"23":48,"24":4,"25":44,"26":44,"27":44,"28":0,"29":44,"30":62,"31":62,"32":51,"33":51,"34":1,"35":1,"36":0,"37":1,"38":1,"39":0,"40":50,"41":83282,"42":50,"43":83266,"44":50,"45":48,"46":83266,"47":83266,"48":83266,"49":83266,"50":83264,"51":2,"52":83264,"53":83264,"54":906018,"55":906018,"56":0,"57":906018,"58":906017,"59":906017,"60":906017,"61":1,"62":44,"63":44,"64":906017,"65":44,"66":44,"67":44,"68":30,"69":30,"70":30,"71":8,"72":22,"73":22,"74":5,"75":17,"76":17,"77":17,"78":17,"79":17,"80":17,"81":61,"82":35,"83":35,"84":26,"85":25,"86":61,"87":57,"88":50,"89":17,"90":37,"91":2,"92":35,"93":35,"94":1,"95":34,"96":26,"97":1631562,"98":26,"99":133335,"100":133335,"101":133335,"102":268432,"103":133335,"104":26,"105":26,"106":4,"107":26,"108":26,"109":24,"110":26,"111":26,"112":26,"113":26,"114":26,"115":72439,"116":72439,"117":146484,"118":142516,"119":3968,"120":72439,"121":26,"122":1,"123":25,"124":133335,"125":133335,"126":133335,"127":268432,"128":203490,"129":133335,"130":64777,"131":64777,"132":64777,"133":64942,"134":64942,"135":64942,"136":133335,"137":61,"138":3,"139":58,"140":1,"141":57,"142":0,"143":57,"144":1,"145":56,"146":56,"147":1,"148":55,"149":17,"150":38,"151":35,"152":35,"153":35,"154":35,"155":35,"156":38,"157":38,"158":38,"159":120,"160":120,"161":120,"162":120,"163":1,"164":119,"165":37,"166":37,"167":36,"168":3,"169":33,"170":1,"171":33,"172":9,"173":9,"174":5,"175":1},"f":{"0":5,"1":62,"2":62,"3":51,"4":1,"5":50,"6":83282,"7":83266,"8":83266,"9":83264,"10":906018,"11":906018,"12":906018,"13":44,"14":30,"15":61,"16":61,"17":35,"18":1631562,"19":26,"20":133335,"21":268432,"22":26,"23":72439,"24":133335,"25":268432,"26":64942,"27":61,"28":57,"29":35,"30":35,"31":38,"32":120,"33":9,"34":5},"b":{"0":[1,1,1],"1":[2,3],"2":[5,5],"3":[11,51],"4":[4,44],"5":[62,55,54],"6":[1,0],"7":[1,0],"8":[83282,83281],"9":[83264,0],"10":[83264,83264],"11":[906017,1],"12":[906018,906018,906018,906018,906018,906017,906017,906017,906017,906017],"13":[345055,560962],"14":[8,22],"15":[30,23],"16":[5,17],"17":[17,33],"18":[2,35],"19":[1,34],"20":[4,22],"21":[24,2],"22":[142516,3968],"23":[1,25],"24":[203490,64942],"25":[64777,68558],"26":[64777,0],"27":[3,58],"28":[61,58],"29":[1,57],"30":[0,57],"31":[57,57],"32":[1,56],"33":[1,55],"34":[17,38],"35":[35,0],"36":[1,119],"37":[120,120],"38":[36,1],"39":[3,33],"40":[1,32]},"inputSourceMap":{"version":3,"file":"/home/c/clee69/cs310/project/project_team086/src/controller/InsightFacade.ts","sources":["/home/c/clee69/cs310/project/project_team086/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightError,\n\tInsightResult,\n\tNotFoundError,\n\tResultTooLargeError,\n} from \"./IInsightFacade\";\nimport JSZip from \"jszip\";\nimport Dataset from \"./Dataset\";\nimport Section from \"./Section\";\nimport { ASTTree, ValidFields } from \"./ASTTree\";\nimport fs from \"fs-extra\";\nimport path from \"path\";\nimport { saveDatasetToDisk, addCacheToMemory } from \"./DiskHandler\";\nimport { applyValidation, sortResults, transformResults, validateRooms } from \"./TransformationManipulations\";\nexport const DATA_DIR = path.join(__dirname, \"../../data\");\n\nexport default class InsightFacade implements IInsightFacade {\n\tprivate datasetIDs: string[] = [];\n\tprivate datasets: Dataset[] = [];\n\n\tpublic async addDataset(id: string, content: string, _kind: InsightDatasetKind): Promise<string[]> {\n\t\tawait addCacheToMemory(this.datasets, this.datasetIDs);\n\t\tif (!this.validId(id)) {\n\t\t\tthrow new InsightError(\"id was invalid!\");\n\t\t}\n\n\t\tlet zip: JSZip;\n\t\ttry {\n\t\t\tzip = await this.loadZip(content);\n\t\t} catch (err) {\n\t\t\tthis.handleZipError(err);\n\t\t}\n\n\t\t// Process and validate sections\n\t\tconst validSections = await this.extractSections(zip);\n\t\tif (validSections.length === 0) {\n\t\t\tthrow new InsightError(\"no valid sections\");\n\t\t}\n\n\t\t// Add dataset and valid sections\n\t\tconst currentDataset = this.addDatasetToMemory(id, validSections);\n\t\ttry {\n\t\t\tawait saveDatasetToDisk(currentDataset, id);\n\t\t} catch {\n\t\t\t// Log the error and re-throw to inform the caller\n\t\t\tthrow new InsightError(\"Failed to save dataset to disk.\");\n\t\t}\n\t\treturn this.datasetIDs;\n\t}\n\n\t// Helper method to validate id\n\tprivate validId(id: string): boolean {\n\t\tconst regex = new RegExp(\"^[^_]+$\");\n\t\treturn regex.test(id) && id.trim().length !== 0 && !this.datasetIDs.includes(id);\n\t}\n\n\t// Helper method to load JSZip content\n\tprivate async loadZip(content: string): Promise<JSZip> {\n\t\ttry {\n\t\t\treturn await JSZip.loadAsync(content, { base64: true });\n\t\t} catch (err) {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthrow new InsightError(\"JSZip threw error: \" + err.message);\n\t\t\t} else {\n\t\t\t\tthrow new InsightError(\"An unknown error occurred.\");\n\t\t\t}\n\t\t}\n\t}\n\n\t// Helper method to handle JSZip error\n\tprivate handleZipError(err: any): never {\n\t\tif (err instanceof Error) {\n\t\t\tthrow new InsightError(\"JSZip threw error: \" + err.message);\n\t\t} else {\n\t\t\tthrow new InsightError(\"An unknown error occurred.\");\n\t\t}\n\t}\n\n\t// Extract sections from zip file\n\tprivate async extractSections(zip: JSZip): Promise<Section[]> {\n\t\tconst fileNames = Object.keys(zip.files).filter(\n\t\t\t(fileName) => fileName.startsWith(\"courses/\") && !zip.files[fileName].dir\n\t\t);\n\n\t\tconst sectionPromises = fileNames.map(async (fileName) => this.processFile(zip, fileName));\n\t\tconst sectionResults = await Promise.all(sectionPromises);\n\t\treturn sectionResults.flat();\n\t}\n\n\t// Process individual file and return valid sections\n\tprivate async processFile(zip: JSZip, fileName: string): Promise<Section[]> {\n\t\tconst file = zip.files[fileName];\n\n\t\ttry {\n\t\t\tconst fileContent = await file.async(\"text\");\n\t\t\tconst parsedJSON = JSON.parse(fileContent);\n\t\t\treturn this.extractValidSections(parsedJSON);\n\t\t} catch {\n\t\t\tthrow new InsightError(`Error processing file ${fileName}`);\n\t\t}\n\t}\n\n\t// Extract valid sections from parsed JSON\n\tprivate extractValidSections(parsedJSON: any): Section[] {\n\t\tif (parsedJSON && Array.isArray(parsedJSON.result)) {\n\t\t\treturn parsedJSON.result\n\t\t\t\t.map((section: any) => this.createSectionFromJson(section))\n\t\t\t\t.filter((section: Section | null) => section !== null) as Section[];\n\t\t}\n\t\treturn [];\n\t}\n\n\t// Create Section object from JSON section if it's valid\n\tprivate createSectionFromJson(section: any): Section | null {\n\t\tif (\n\t\t\t\"id\" in section &&\n\t\t\t\"Course\" in section &&\n\t\t\t\"Title\" in section &&\n\t\t\t\"Professor\" in section &&\n\t\t\t\"Subject\" in section &&\n\t\t\t\"Year\" in section &&\n\t\t\t\"Avg\" in section &&\n\t\t\t\"Pass\" in section &&\n\t\t\t\"Fail\" in section &&\n\t\t\t\"Audit\" in section\n\t\t) {\n\t\t\tconst overallSectionReplacementYear = 1900;\n\t\t\tconst year = section.Section === \"overall\" ? overallSectionReplacementYear : section.Year;\n\n\t\t\treturn new Section(\n\t\t\t\tsection.id,\n\t\t\t\tsection.Course,\n\t\t\t\tsection.Title,\n\t\t\t\tsection.Professor,\n\t\t\t\tsection.Subject,\n\t\t\t\tyear,\n\t\t\t\tsection.Avg,\n\t\t\t\tsection.Pass,\n\t\t\t\tsection.Fail,\n\t\t\t\tsection.Audit\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n\n\t// Add dataset to memory\n\tprivate addDatasetToMemory(id: string, sections: Section[]): Dataset {\n\t\tconst currentDataset = new Dataset(id);\n\t\tfor (const section of sections) {\n\t\t\tcurrentDataset.addSection(section);\n\t\t}\n\t\tthis.datasetIDs.push(id);\n\t\tthis.datasets.push(currentDataset);\n\t\treturn currentDataset;\n\t}\n\n\tpublic async removeDataset(id: string): Promise<string> {\n\t\tawait addCacheToMemory(this.datasets, this.datasetIDs);\n\t\tconst regex = new RegExp(\"^[^_]+$\");\n\t\tif (!(regex.test(id) && id.trim().length !== 0)) {\n\t\t\tthrow new InsightError(\"Invalid ID provided for removal\");\n\t\t}\n\n\t\tconst index = this.datasetIDs.indexOf(id);\n\t\tif (index === -1) {\n\t\t\tthrow new NotFoundError(\"Dataset not found!\");\n\t\t}\n\n\t\t// Remove from memory\n\t\tthis.datasetIDs.splice(index, 1);\n\t\tthis.datasets.splice(index, 1);\n\n\t\t// Remove from disk\n\t\tawait fs.ensureDir(DATA_DIR);\n\n\t\tconst filePath = path.join(DATA_DIR, `${id}.json`);\n\t\tawait fs.remove(filePath);\n\n\t\treturn id;\n\t}\n\n\tpublic async performQuery(query: any): Promise<InsightResult[]> {\n\t\tconst curDatasetID: string = this.validateAndPrepareQuery(query);\n\t\tconst sections = this.getSections(curDatasetID);\n\t\tconst filteredResults = this.filterResults(query.WHERE, sections, curDatasetID);\n\t\tconst finalResults = this.transformAndSortResults(filteredResults, query, curDatasetID);\n\n\t\treturn finalResults as InsightResult[];\n\t}\n\n\tprivate validateAndPrepareQuery(query: any): string {\n\t\tthis.validateQueryWhere(query.WHERE);\n\t\tconst curDatasetID: string = this.validateColumnsAndOptions(query);\n\t\tif (query.TRANSFORMATIONS) {\n\t\t\tapplyValidation(query, curDatasetID);\n\t\t}\n\t\tif (!this.datasetIDs.includes(curDatasetID)) {\n\t\t\tthrow new InsightError(\"Dataset not in added lists\");\n\t\t}\n\t\treturn curDatasetID;\n\t}\n\n\tprivate filterResults(queryParams: any, sections: any[], curDatasetID: string): any[] {\n\t\tif (Object.entries(queryParams).length === 0) {\n\t\t\treturn sections; // Return all if no filters are applied\n\t\t}\n\t\tconst createdASTTree = new ASTTree(queryParams, curDatasetID);\n\t\treturn sections.filter((section: any) => {\n\t\t\treturn createdASTTree.evaluate(section);\n\t\t});\n\t}\n\n\tprivate transformAndSortResults(filteredResults: any[], query: any, curDatasetID: string): any[] {\n\t\tconst columnFiltered = filteredResults.map((section: any) => {\n\t\t\tconst result: any = {};\n\t\t\tconst columns = this.extractFilterColumns(query);\n\t\t\tcolumns.forEach((column) => {\n\t\t\t\tresult[column] = section[column];\n\t\t\t});\n\t\t\treturn result;\n\t\t});\n\n\t\tlet transformedResults = columnFiltered;\n\t\tif (query.TRANSFORMATIONS) {\n\t\t\ttransformedResults = transformResults(transformedResults, query);\n\t\t}\n\n\t\tlet sortedResult = transformedResults;\n\t\tif (query.OPTIONS.ORDER) {\n\t\t\tsortedResult = sortResults(transformedResults, query.OPTIONS.ORDER.split(\"_\")[1]);\n\t\t}\n\n\t\treturn this.constructFinalResult(sortedResult, curDatasetID, query);\n\t}\n\n\t//this function creates the results into the insightresult type\n\tprivate constructFinalResult(sortedResult: any[], curDatasetID: string, query: any): any {\n\t\tconst result: any[] = [];\n\t\tconst maxNum = 5000;\n\t\tconst columns = query.OPTIONS.COLUMNS;\n\t\tsortedResult.forEach((entry) => {\n\t\t\tconst newEntry: Record<string, any> = {};\n\t\t\tfor (const [key, value] of Object.entries(entry)) {\n\t\t\t\tif (!columns.includes(key)) {\n\t\t\t\t\tnewEntry[`${curDatasetID}_${key}`] = value;\n\t\t\t\t} else {\n\t\t\t\t\tnewEntry[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.push(newEntry as InsightResult);\n\t\t});\n\t\tif (result.length >= maxNum) {\n\t\t\tthrow new ResultTooLargeError(\"Too many results\");\n\t\t}\n\t\treturn result;\n\t}\n\n\t// this function takes the OPTIONS.COLUMNS part and strips all the dataset id's from the front\n\tprivate extractFilterColumns(query: any): string[] {\n\t\tconst columns = query.OPTIONS.COLUMNS;\n\t\tconst result: string[] = [];\n\t\tcolumns.forEach((column: string) => {\n\t\t\tif (column.includes(\"_\")) {\n\t\t\t\tresult.push(column.split(\"_\")[1]);\n\t\t\t}\n\t\t});\n\t\tif (query.TRANSFORMATIONS !== undefined) {\n\t\t\tconst apply = query.TRANSFORMATIONS.APPLY;\n\n\t\t\tif (apply.length >= 1) {\n\t\t\t\tapply.forEach((entry: any) => {\n\t\t\t\t\tconst column = Object.entries(entry)[0][1] as any;\n\t\t\t\t\tconst field = Object.entries(column)[0][1] as string;\n\n\t\t\t\t\tresult.push(field.split(\"_\")[1]);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// Helper method to load a dataset from disk and store it in memory\n\n\tprivate validateQueryWhere(queryParams: any): void {\n\t\tif (queryParams === undefined || queryParams === null) {\n\t\t\tthrow new InsightError(\"Must include WHERE clause\");\n\t\t}\n\t\tif (Object.keys(queryParams).length > 1) {\n\t\t\tthrow new InsightError(\"Multiple keys error\");\n\t\t}\n\t}\n\t// this function takes in the query and checks the options, columns and order section\n\t// params: queryOptions: any because it can either be empty or a json file\n\t// returns the latest dataset referenced, or InsightError if breaks spec\n\tprivate validateColumnsAndOptions(queryOptions: any): string {\n\t\t//check if empty\n\t\tif (queryOptions === undefined || queryOptions === null) {\n\t\t\tthrow new InsightError(\"Query is empty!\");\n\t\t}\n\n\t\tif (queryOptions.OPTIONS === undefined) {\n\t\t\tthrow new InsightError(\"Options is empty!\");\n\t\t}\n\t\t//vaidate options\n\t\tconst options = queryOptions.OPTIONS;\n\t\tif (options.COLUMNS.length === 0) {\n\t\t\tthrow new InsightError(\"Columns is empty!\");\n\t\t}\n\t\tif (queryOptions.TRANSFORMATIONS !== undefined) {\n\t\t\treturn validateRooms(options);\n\t\t} else {\n\t\t\treturn this.validateNoRooms(options);\n\t\t}\n\t}\n\tprivate getSections(datasetID: string): any[] {\n\t\tlet results: any[] = [];\n\t\tthis.datasets.forEach((dataset: Dataset) => {\n\t\t\tif (dataset.getDatasetID() === datasetID) {\n\t\t\t\tresults = dataset.getSections();\n\t\t\t}\n\t\t});\n\t\treturn results;\n\t}\n\tprivate validateNoRooms(options: any): string {\n\t\t//iterate through column and validate\n\t\tconst columns = options.COLUMNS;\n\t\tlet prevDatasetID = columns[0].split(\"_\");\n\n\t\tcolumns.forEach((field: any) => {\n\t\t\tconst splitField = field.split(\"_\");\n\t\t\tconst curDatasetID = splitField[0];\n\t\t\tconst curField = splitField[1];\n\t\t\tif (!curDatasetID === prevDatasetID || !ValidFields.has(curField)) {\n\t\t\t\tthrow new InsightError(\"Error with columns\");\n\t\t\t}\n\t\t\tprevDatasetID = curDatasetID;\n\t\t});\n\n\t\t//validate order\n\t\tconst order = options.ORDER;\n\t\tif (order !== undefined) {\n\t\t\tif (!columns.includes(order)) {\n\t\t\t\tthrow new InsightError(\"order has to be part of columns\");\n\t\t\t}\n\t\t\tif (order.substring(0, order.indexOf(\"_\")) !== prevDatasetID) {\n\t\t\t\tthrow new InsightError(\"order is referencing an invalid dataset\");\n\t\t\t}\n\t\t}\n\t\treturn prevDatasetID;\n\t}\n\n\tpublic async listDatasets(): Promise<InsightDataset[]> {\n\t\tawait addCacheToMemory(this.datasets, this.datasetIDs);\n\t\treturn this.datasets.map((dataset) => ({\n\t\t\tid: dataset.getDatasetID(),\n\t\t\tkind: InsightDatasetKind.Sections,\n\t\t\tnumRows: dataset.getSections().length,\n\t\t}));\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d815a363f0d7833e5a0b0a1be5cf524eca383ddf","contentHash":"7e82cf45c3f979b946e563dcdc64a0188be62c322a01adc2deee20f6ceead26e"},"/home/c/clee69/cs310/project/project_team086/src/controller/Dataset.ts":{"path":"/home/c/clee69/cs310/project/project_team086/src/controller/Dataset.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":15},"end":{"line":5,"column":17}},"2":{"start":{"line":7,"column":8},"end":{"line":7,"column":35}},"3":{"start":{"line":10,"column":8},"end":{"line":10,"column":35}},"4":{"start":{"line":13,"column":8},"end":{"line":13,"column":36}},"5":{"start":{"line":16,"column":8},"end":{"line":16,"column":30}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"7":{"start":{"line":22,"column":0},"end":{"line":22,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":27},"end":{"line":8,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":28},"end":{"line":11,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":24},"end":{"line":14,"column":5}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":19},"end":{"line":17,"column":5}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":18},"end":{"line":20,"column":5}},"line":18}},"branchMap":{},"s":{"0":1,"1":113,"2":113,"3":0,"4":1683419,"5":84,"6":84,"7":1},"f":{"0":113,"1":0,"2":1683419,"3":84,"4":84},"b":{},"inputSourceMap":{"version":3,"file":"/home/c/clee69/cs310/project/project_team086/src/controller/Dataset.ts","sources":["/home/c/clee69/cs310/project/project_team086/src/controller/Dataset.ts"],"names":[],"mappings":";;AAEA,MAAqB,OAAO;IACnB,SAAS,CAAS;IAClB,QAAQ,GAAc,EAAE,CAAC;IAEjC,YAAY,SAAiB;QAC5B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC5B,CAAC;IAEM,YAAY,CAAC,SAAiB;QACpC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC5B,CAAC;IAEM,UAAU,CAAC,OAAgB;QACjC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;IAEM,YAAY;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC;IACvB,CAAC;IAEM,WAAW;QACjB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;CACD;AAvBD,0BAuBC","sourcesContent":["import Section from \"./Section\";\n\nexport default class Dataset {\n\tprivate datasetID: string;\n\tprivate sections: Section[] = [];\n\n\tconstructor(datasetID: string) {\n\t\tthis.datasetID = datasetID;\n\t}\n\n\tpublic setDatasetID(datasetID: string): void {\n\t\tthis.datasetID = datasetID;\n\t}\n\n\tpublic addSection(section: Section): void {\n\t\tthis.sections.push(section);\n\t}\n\n\tpublic getDatasetID(): string {\n\t\treturn this.datasetID;\n\t}\n\n\tpublic getSections(): Section[] {\n\t\treturn this.sections;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"17ef70a1d211b927bf0d91afcf6f4964f4f94620","contentHash":"bd02859038708d868f730df8571cec89637890c9de7868d25ce9261d99097c79"},"/home/c/clee69/cs310/project/project_team086/src/controller/Section.ts":{"path":"/home/c/clee69/cs310/project/project_team086/src/controller/Section.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":15,"column":8},"end":{"line":15,"column":23}},"2":{"start":{"line":16,"column":8},"end":{"line":16,"column":25}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":27}},"4":{"start":{"line":18,"column":8},"end":{"line":18,"column":36}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":28}},"6":{"start":{"line":20,"column":8},"end":{"line":20,"column":25}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":23}},"8":{"start":{"line":22,"column":8},"end":{"line":22,"column":25}},"9":{"start":{"line":23,"column":8},"end":{"line":23,"column":25}},"10":{"start":{"line":24,"column":8},"end":{"line":24,"column":27}},"11":{"start":{"line":27,"column":8},"end":{"line":27,"column":25}},"12":{"start":{"line":30,"column":8},"end":{"line":30,"column":23}},"13":{"start":{"line":33,"column":8},"end":{"line":33,"column":26}},"14":{"start":{"line":36,"column":8},"end":{"line":36,"column":31}},"15":{"start":{"line":39,"column":8},"end":{"line":39,"column":25}},"16":{"start":{"line":42,"column":8},"end":{"line":42,"column":25}},"17":{"start":{"line":45,"column":8},"end":{"line":45,"column":24}},"18":{"start":{"line":48,"column":8},"end":{"line":48,"column":25}},"19":{"start":{"line":51,"column":8},"end":{"line":51,"column":25}},"20":{"start":{"line":54,"column":8},"end":{"line":54,"column":26}},"21":{"start":{"line":57,"column":0},"end":{"line":57,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":85},"end":{"line":25,"column":5}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":14},"end":{"line":28,"column":5}},"line":26},"2":{"name":"(anonymous_2)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":12},"end":{"line":31,"column":5}},"line":29},"3":{"name":"(anonymous_3)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":15},"end":{"line":34,"column":5}},"line":32},"4":{"name":"(anonymous_4)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":20},"end":{"line":37,"column":5}},"line":35},"5":{"name":"(anonymous_5)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":14},"end":{"line":40,"column":5}},"line":38},"6":{"name":"(anonymous_6)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":14},"end":{"line":43,"column":5}},"line":41},"7":{"name":"(anonymous_7)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":13},"end":{"line":46,"column":5}},"line":44},"8":{"name":"(anonymous_8)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":14},"end":{"line":49,"column":5}},"line":47},"9":{"name":"(anonymous_9)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":14},"end":{"line":52,"column":5}},"line":50},"10":{"name":"(anonymous_10)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":15},"end":{"line":55,"column":5}},"line":53}},"branchMap":{},"s":{"0":1,"1":1683419,"2":1683419,"3":1683419,"4":1683419,"5":1683419,"6":1683419,"7":1683419,"8":1683419,"9":1683419,"10":1683419,"11":906017,"12":906017,"13":906017,"14":906017,"15":906017,"16":906017,"17":906017,"18":906017,"19":906017,"20":906017,"21":1},"f":{"0":1683419,"1":906017,"2":906017,"3":906017,"4":906017,"5":906017,"6":906017,"7":906017,"8":906017,"9":906017,"10":906017},"b":{},"inputSourceMap":{"version":3,"file":"/home/c/clee69/cs310/project/project_team086/src/controller/Section.ts","sources":["/home/c/clee69/cs310/project/project_team086/src/controller/Section.ts"],"names":[],"mappings":";;AAAA,MAAqB,OAAO;IACV,IAAI,CAAS;IACb,EAAE,CAAS;IACX,KAAK,CAAS;IACd,UAAU,CAAS;IACnB,IAAI,CAAS;IACb,IAAI,CAAS;IACb,GAAG,CAAS;IACZ,IAAI,CAAS;IACb,IAAI,CAAS;IACb,KAAK,CAAS;IAE/B,YACC,EAAU,EACV,MAAc,EACd,KAAa,EACb,SAAiB,EACjB,OAAe,EACf,IAAY,EACZ,GAAW,EACX,IAAY,EACZ,IAAY,EACZ,KAAa;QAEb,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACpB,CAAC;IAGM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,KAAK;QACX,OAAO,IAAI,CAAC,EAAE,CAAC;IAChB,CAAC;IAEM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAEM,aAAa;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,MAAM;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC;IACjB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAEM,QAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;CACD;AA5ED,0BA4EC","sourcesContent":["export default class Section {\n\tprivate readonly uuid: string;\n\tprivate readonly id: string;\n\tprivate readonly title: string;\n\tprivate readonly instructor: string;\n\tprivate readonly dept: string;\n\tprivate readonly year: number;\n\tprivate readonly avg: number;\n\tprivate readonly pass: number;\n\tprivate readonly fail: number;\n\tprivate readonly audit: number;\n\n\tconstructor(\n\t\tid: string,\n\t\tcourse: string,\n\t\ttitle: string,\n\t\tprofessor: string,\n\t\tsubject: string,\n\t\tyear: number,\n\t\tavg: number,\n\t\tpass: number,\n\t\tfail: number,\n\t\taudit: number\n\t) {\n\t\tthis.uuid = id;\n\t\tthis.id = course;\n\t\tthis.title = title;\n\t\tthis.instructor = professor;\n\t\tthis.dept = subject;\n\t\tthis.year = year;\n\t\tthis.avg = avg;\n\t\tthis.pass = pass;\n\t\tthis.fail = fail;\n\t\tthis.audit = audit;\n\t}\n\n\t// Getters for each field\n\tpublic getUuid(): string {\n\t\treturn this.uuid;\n\t}\n\n\tpublic getId(): string {\n\t\treturn this.id;\n\t}\n\n\tpublic getTitle(): string {\n\t\treturn this.title;\n\t}\n\n\tpublic getInstructor(): string {\n\t\treturn this.instructor;\n\t}\n\n\tpublic getDept(): string {\n\t\treturn this.dept;\n\t}\n\n\tpublic getYear(): number {\n\t\treturn this.year;\n\t}\n\n\tpublic getAvg(): number {\n\t\treturn this.avg;\n\t}\n\n\tpublic getPass(): number {\n\t\treturn this.pass;\n\t}\n\n\tpublic getFail(): number {\n\t\treturn this.fail;\n\t}\n\n\tpublic getAudit(): number {\n\t\treturn this.audit;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"70afd727cf252ea10c1545e6fb80ac8c33f2a24d","contentHash":"75bfb3c4a86844715e67ecb3dfb0bb3294c989b7d9687cd14be9f385efaf853b"},"/home/c/clee69/cs310/project/project_team086/src/controller/ASTTree.ts":{"path":"/home/c/clee69/cs310/project/project_team086/src/controller/ASTTree.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":47}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":52}},"3":{"start":{"line":5,"column":0},"end":{"line":27,"column":3}},"4":{"start":{"line":31,"column":8},"end":{"line":31,"column":56}},"5":{"start":{"line":34,"column":8},"end":{"line":34,"column":40}},"6":{"start":{"line":37,"column":29},"end":{"line":37,"column":53}},"7":{"start":{"line":38,"column":8},"end":{"line":38,"column":34}},"8":{"start":{"line":39,"column":8},"end":{"line":49,"column":9}},"9":{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},"10":{"start":{"line":41,"column":16},"end":{"line":41,"column":83}},"11":{"start":{"line":43,"column":32},"end":{"line":47,"column":13}},"12":{"start":{"line":45,"column":47},"end":{"line":45,"column":82}},"13":{"start":{"line":46,"column":36},"end":{"line":46,"column":87}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":31}},"15":{"start":{"line":50,"column":8},"end":{"line":57,"column":9}},"16":{"start":{"line":51,"column":33},"end":{"line":55,"column":13}},"17":{"start":{"line":54,"column":36},"end":{"line":54,"column":97}},"18":{"start":{"line":56,"column":12},"end":{"line":56,"column":32}},"19":{"start":{"line":58,"column":8},"end":{"line":69,"column":9}},"20":{"start":{"line":59,"column":12},"end":{"line":59,"column":73}},"21":{"start":{"line":60,"column":55},"end":{"line":60,"column":79}},"22":{"start":{"line":61,"column":12},"end":{"line":61,"column":77}},"23":{"start":{"line":62,"column":36},"end":{"line":67,"column":13}},"24":{"start":{"line":66,"column":36},"end":{"line":66,"column":78}},"25":{"start":{"line":68,"column":12},"end":{"line":68,"column":35}},"26":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"27":{"start":{"line":73,"column":12},"end":{"line":73,"column":79}},"28":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"29":{"start":{"line":78,"column":12},"end":{"line":78,"column":70}},"30":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"31":{"start":{"line":81,"column":12},"end":{"line":81,"column":63}},"32":{"start":{"line":85,"column":8},"end":{"line":85,"column":35}},"33":{"start":{"line":88,"column":8},"end":{"line":93,"column":9}},"34":{"start":{"line":89,"column":12},"end":{"line":89,"column":77}},"35":{"start":{"line":89,"column":45},"end":{"line":89,"column":75}},"36":{"start":{"line":91,"column":13},"end":{"line":93,"column":9}},"37":{"start":{"line":92,"column":12},"end":{"line":92,"column":76}},"38":{"start":{"line":92,"column":44},"end":{"line":92,"column":74}},"39":{"start":{"line":94,"column":8},"end":{"line":94,"column":74}},"40":{"start":{"line":97,"column":26},"end":{"line":97,"column":50}},"41":{"start":{"line":98,"column":26},"end":{"line":98,"column":38}},"42":{"start":{"line":99,"column":26},"end":{"line":99,"column":38}},"43":{"start":{"line":100,"column":24},"end":{"line":100,"column":47}},"44":{"start":{"line":101,"column":8},"end":{"line":110,"column":9}},"45":{"start":{"line":103,"column":16},"end":{"line":103,"column":114}},"46":{"start":{"line":105,"column":16},"end":{"line":105,"column":87}},"47":{"start":{"line":107,"column":16},"end":{"line":107,"column":87}},"48":{"start":{"line":109,"column":16},"end":{"line":109,"column":89}},"49":{"start":{"line":113,"column":8},"end":{"line":118,"column":9}},"50":{"start":{"line":114,"column":12},"end":{"line":114,"column":24}},"51":{"start":{"line":116,"column":13},"end":{"line":118,"column":9}},"52":{"start":{"line":117,"column":12},"end":{"line":117,"column":24}},"53":{"start":{"line":119,"column":8},"end":{"line":119,"column":21}},"54":{"start":{"line":122,"column":22},"end":{"line":122,"column":79}},"55":{"start":{"line":123,"column":8},"end":{"line":132,"column":9}},"56":{"start":{"line":124,"column":12},"end":{"line":126,"column":13}},"57":{"start":{"line":125,"column":16},"end":{"line":125,"column":75}},"58":{"start":{"line":129,"column":12},"end":{"line":131,"column":13}},"59":{"start":{"line":130,"column":16},"end":{"line":130,"column":76}},"60":{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},"61":{"start":{"line":134,"column":12},"end":{"line":134,"column":72}},"62":{"start":{"line":138,"column":8},"end":{"line":140,"column":9}},"63":{"start":{"line":139,"column":12},"end":{"line":139,"column":73}},"64":{"start":{"line":141,"column":8},"end":{"line":155,"column":9}},"65":{"start":{"line":142,"column":35},"end":{"line":142,"column":55}},"66":{"start":{"line":143,"column":12},"end":{"line":143,"column":56}},"67":{"start":{"line":145,"column":13},"end":{"line":155,"column":9}},"68":{"start":{"line":146,"column":35},"end":{"line":146,"column":51}},"69":{"start":{"line":147,"column":12},"end":{"line":147,"column":56}},"70":{"start":{"line":149,"column":13},"end":{"line":155,"column":9}},"71":{"start":{"line":150,"column":35},"end":{"line":150,"column":55}},"72":{"start":{"line":151,"column":12},"end":{"line":151,"column":58}},"73":{"start":{"line":154,"column":12},"end":{"line":154,"column":43}},"74":{"start":{"line":158,"column":0},"end":{"line":158,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":34},"end":{"line":32,"column":5}},"line":30},"1":{"name":"(anonymous_1)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":19},"end":{"line":35,"column":5}},"line":33},"2":{"name":"(anonymous_2)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":35},"end":{"line":70,"column":5}},"line":36},"3":{"name":"(anonymous_3)","decl":{"start":{"line":45,"column":36},"end":{"line":45,"column":37}},"loc":{"start":{"line":45,"column":47},"end":{"line":45,"column":82}},"line":45},"4":{"name":"(anonymous_4)","decl":{"start":{"line":46,"column":26},"end":{"line":46,"column":27}},"loc":{"start":{"line":46,"column":36},"end":{"line":46,"column":87}},"line":46},"5":{"name":"(anonymous_5)","decl":{"start":{"line":54,"column":26},"end":{"line":54,"column":27}},"loc":{"start":{"line":54,"column":36},"end":{"line":54,"column":97}},"line":54},"6":{"name":"(anonymous_6)","decl":{"start":{"line":66,"column":26},"end":{"line":66,"column":27}},"loc":{"start":{"line":66,"column":36},"end":{"line":66,"column":78}},"line":66},"7":{"name":"(anonymous_7)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":48},"end":{"line":75,"column":5}},"line":71},"8":{"name":"(anonymous_8)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":25},"end":{"line":83,"column":5}},"line":76},"9":{"name":"(anonymous_9)","decl":{"start":{"line":84,"column":4},"end":{"line":84,"column":5}},"loc":{"start":{"line":84,"column":29},"end":{"line":86,"column":5}},"line":84},"10":{"name":"(anonymous_10)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":44},"end":{"line":95,"column":5}},"line":87},"11":{"name":"(anonymous_11)","decl":{"start":{"line":89,"column":34},"end":{"line":89,"column":35}},"loc":{"start":{"line":89,"column":45},"end":{"line":89,"column":75}},"line":89},"12":{"name":"(anonymous_12)","decl":{"start":{"line":92,"column":33},"end":{"line":92,"column":34}},"loc":{"start":{"line":92,"column":44},"end":{"line":92,"column":74}},"line":92},"13":{"name":"(anonymous_13)","decl":{"start":{"line":96,"column":4},"end":{"line":96,"column":5}},"loc":{"start":{"line":96,"column":47},"end":{"line":111,"column":5}},"line":96},"14":{"name":"(anonymous_14)","decl":{"start":{"line":112,"column":4},"end":{"line":112,"column":5}},"loc":{"start":{"line":112,"column":39},"end":{"line":120,"column":5}},"line":112},"15":{"name":"(anonymous_15)","decl":{"start":{"line":121,"column":4},"end":{"line":121,"column":5}},"loc":{"start":{"line":121,"column":69},"end":{"line":136,"column":5}},"line":121},"16":{"name":"(anonymous_16)","decl":{"start":{"line":137,"column":4},"end":{"line":137,"column":5}},"loc":{"start":{"line":137,"column":41},"end":{"line":156,"column":5}},"line":137}},"branchMap":{"0":{"loc":{"start":{"line":39,"column":8},"end":{"line":49,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":49,"column":9}},{"start":{"line":39,"column":8},"end":{"line":49,"column":9}}],"line":39},"1":{"loc":{"start":{"line":39,"column":12},"end":{"line":39,"column":41}},"type":"binary-expr","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":25}},{"start":{"line":39,"column":29},"end":{"line":39,"column":41}}],"line":39},"2":{"loc":{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},"type":"if","locations":[{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},{"start":{"line":40,"column":12},"end":{"line":42,"column":13}}],"line":40},"3":{"loc":{"start":{"line":40,"column":16},"end":{"line":40,"column":59}},"type":"binary-expr","locations":[{"start":{"line":40,"column":16},"end":{"line":40,"column":37}},{"start":{"line":40,"column":41},"end":{"line":40,"column":59}}],"line":40},"4":{"loc":{"start":{"line":50,"column":8},"end":{"line":57,"column":9}},"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":57,"column":9}},{"start":{"line":50,"column":8},"end":{"line":57,"column":9}}],"line":50},"5":{"loc":{"start":{"line":58,"column":8},"end":{"line":69,"column":9}},"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":69,"column":9}},{"start":{"line":58,"column":8},"end":{"line":69,"column":9}}],"line":58},"6":{"loc":{"start":{"line":58,"column":12},"end":{"line":58,"column":72}},"type":"binary-expr","locations":[{"start":{"line":58,"column":12},"end":{"line":58,"column":24}},{"start":{"line":58,"column":28},"end":{"line":58,"column":40}},{"start":{"line":58,"column":44},"end":{"line":58,"column":56}},{"start":{"line":58,"column":60},"end":{"line":58,"column":72}}],"line":58},"7":{"loc":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},{"start":{"line":72,"column":8},"end":{"line":74,"column":9}}],"line":72},"8":{"loc":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},{"start":{"line":77,"column":8},"end":{"line":79,"column":9}}],"line":77},"9":{"loc":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},{"start":{"line":80,"column":8},"end":{"line":82,"column":9}}],"line":80},"10":{"loc":{"start":{"line":88,"column":8},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":93,"column":9}},{"start":{"line":88,"column":8},"end":{"line":93,"column":9}}],"line":88},"11":{"loc":{"start":{"line":91,"column":13},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":91,"column":13},"end":{"line":93,"column":9}},{"start":{"line":91,"column":13},"end":{"line":93,"column":9}}],"line":91},"12":{"loc":{"start":{"line":101,"column":8},"end":{"line":110,"column":9}},"type":"switch","locations":[{"start":{"line":102,"column":12},"end":{"line":103,"column":114}},{"start":{"line":104,"column":12},"end":{"line":105,"column":87}},{"start":{"line":106,"column":12},"end":{"line":107,"column":87}},{"start":{"line":108,"column":12},"end":{"line":109,"column":89}}],"line":101},"13":{"loc":{"start":{"line":103,"column":23},"end":{"line":103,"column":113}},"type":"binary-expr","locations":[{"start":{"line":103,"column":23},"end":{"line":103,"column":64}},{"start":{"line":103,"column":68},"end":{"line":103,"column":113}}],"line":103},"14":{"loc":{"start":{"line":105,"column":23},"end":{"line":105,"column":86}},"type":"binary-expr","locations":[{"start":{"line":105,"column":23},"end":{"line":105,"column":57}},{"start":{"line":105,"column":61},"end":{"line":105,"column":86}}],"line":105},"15":{"loc":{"start":{"line":107,"column":23},"end":{"line":107,"column":86}},"type":"binary-expr","locations":[{"start":{"line":107,"column":23},"end":{"line":107,"column":57}},{"start":{"line":107,"column":61},"end":{"line":107,"column":86}}],"line":107},"16":{"loc":{"start":{"line":109,"column":23},"end":{"line":109,"column":88}},"type":"binary-expr","locations":[{"start":{"line":109,"column":23},"end":{"line":109,"column":57}},{"start":{"line":109,"column":61},"end":{"line":109,"column":88}}],"line":109},"17":{"loc":{"start":{"line":112,"column":26},"end":{"line":112,"column":37}},"type":"default-arg","locations":[{"start":{"line":112,"column":33},"end":{"line":112,"column":37}}],"line":112},"18":{"loc":{"start":{"line":113,"column":8},"end":{"line":118,"column":9}},"type":"if","locations":[{"start":{"line":113,"column":8},"end":{"line":118,"column":9}},{"start":{"line":113,"column":8},"end":{"line":118,"column":9}}],"line":113},"19":{"loc":{"start":{"line":113,"column":12},"end":{"line":113,"column":45}},"type":"binary-expr","locations":[{"start":{"line":113,"column":12},"end":{"line":113,"column":37}},{"start":{"line":113,"column":41},"end":{"line":113,"column":45}}],"line":113},"20":{"loc":{"start":{"line":116,"column":13},"end":{"line":118,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":13},"end":{"line":118,"column":9}},{"start":{"line":116,"column":13},"end":{"line":118,"column":9}}],"line":116},"21":{"loc":{"start":{"line":116,"column":17},"end":{"line":116,"column":51}},"type":"binary-expr","locations":[{"start":{"line":116,"column":17},"end":{"line":116,"column":42}},{"start":{"line":116,"column":46},"end":{"line":116,"column":51}}],"line":116},"22":{"loc":{"start":{"line":123,"column":8},"end":{"line":132,"column":9}},"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":132,"column":9}},{"start":{"line":123,"column":8},"end":{"line":132,"column":9}}],"line":123},"23":{"loc":{"start":{"line":123,"column":12},"end":{"line":123,"column":113}},"type":"binary-expr","locations":[{"start":{"line":123,"column":12},"end":{"line":123,"column":28}},{"start":{"line":123,"column":32},"end":{"line":123,"column":46}},{"start":{"line":123,"column":50},"end":{"line":123,"column":67}},{"start":{"line":123,"column":71},"end":{"line":123,"column":93}},{"start":{"line":123,"column":97},"end":{"line":123,"column":113}}],"line":123},"24":{"loc":{"start":{"line":124,"column":12},"end":{"line":126,"column":13}},"type":"if","locations":[{"start":{"line":124,"column":12},"end":{"line":126,"column":13}},{"start":{"line":124,"column":12},"end":{"line":126,"column":13}}],"line":124},"25":{"loc":{"start":{"line":129,"column":12},"end":{"line":131,"column":13}},"type":"if","locations":[{"start":{"line":129,"column":12},"end":{"line":131,"column":13}},{"start":{"line":129,"column":12},"end":{"line":131,"column":13}}],"line":129},"26":{"loc":{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},"type":"if","locations":[{"start":{"line":133,"column":8},"end":{"line":135,"column":9}},{"start":{"line":133,"column":8},"end":{"line":135,"column":9}}],"line":133},"27":{"loc":{"start":{"line":133,"column":12},"end":{"line":133,"column":69}},"type":"binary-expr","locations":[{"start":{"line":133,"column":12},"end":{"line":133,"column":29}},{"start":{"line":133,"column":33},"end":{"line":133,"column":69}}],"line":133},"28":{"loc":{"start":{"line":138,"column":8},"end":{"line":140,"column":9}},"type":"if","locations":[{"start":{"line":138,"column":8},"end":{"line":140,"column":9}},{"start":{"line":138,"column":8},"end":{"line":140,"column":9}}],"line":138},"29":{"loc":{"start":{"line":138,"column":12},"end":{"line":138,"column":87}},"type":"binary-expr","locations":[{"start":{"line":138,"column":12},"end":{"line":138,"column":33}},{"start":{"line":138,"column":37},"end":{"line":138,"column":61}},{"start":{"line":138,"column":65},"end":{"line":138,"column":87}}],"line":138},"30":{"loc":{"start":{"line":141,"column":8},"end":{"line":155,"column":9}},"type":"if","locations":[{"start":{"line":141,"column":8},"end":{"line":155,"column":9}},{"start":{"line":141,"column":8},"end":{"line":155,"column":9}}],"line":141},"31":{"loc":{"start":{"line":141,"column":12},"end":{"line":141,"column":60}},"type":"binary-expr","locations":[{"start":{"line":141,"column":12},"end":{"line":141,"column":35}},{"start":{"line":141,"column":39},"end":{"line":141,"column":60}}],"line":141},"32":{"loc":{"start":{"line":145,"column":13},"end":{"line":155,"column":9}},"type":"if","locations":[{"start":{"line":145,"column":13},"end":{"line":155,"column":9}},{"start":{"line":145,"column":13},"end":{"line":155,"column":9}}],"line":145},"33":{"loc":{"start":{"line":149,"column":13},"end":{"line":155,"column":9}},"type":"if","locations":[{"start":{"line":149,"column":13},"end":{"line":155,"column":9}},{"start":{"line":149,"column":13},"end":{"line":155,"column":9}}],"line":149}},"s":{"0":1,"1":1,"2":1,"3":1,"4":34,"5":1631562,"6":64911,"7":64911,"8":64909,"9":30,"10":0,"11":30,"12":54,"13":1695868,"14":29,"15":64879,"16":6,"17":64817,"18":6,"19":64873,"20":64873,"21":64871,"22":64871,"23":64867,"24":2169877,"25":64867,"26":64873,"27":2,"28":64911,"29":1,"30":64910,"31":1,"32":2299000,"33":1695868,"34":920986,"35":942957,"36":774882,"37":774882,"38":1291226,"39":0,"40":2169877,"41":2169877,"42":2169877,"43":2169877,"44":2169877,"45":664857,"46":858990,"47":193836,"48":452194,"49":2169877,"50":1505020,"51":664857,"52":664857,"53":0,"54":64871,"55":64871,"56":230,"57":1,"58":64641,"59":2,"60":64868,"61":1,"62":664857,"63":1,"64":664856,"65":64612,"66":64612,"67":600244,"68":129224,"69":129224,"70":471020,"71":193605,"72":193605,"73":277415,"74":1},"f":{"0":34,"1":1631562,"2":64911,"3":54,"4":1695868,"5":64817,"6":2169877,"7":64873,"8":64911,"9":2299000,"10":1695868,"11":942957,"12":1291226,"13":2169877,"14":2169877,"15":64871,"16":664857},"b":{"0":[30,64879],"1":[64909,64892],"2":[0,30],"3":[30,30],"4":[6,64873],"5":[64873,0],"6":[64873,64640,64631,16],"7":[2,64871],"8":[1,64910],"9":[1,64909],"10":[920986,774882],"11":[774882,0],"12":[664857,858990,193836,452194],"13":[664857,664857],"14":[858990,858990],"15":[193836,193836],"16":[452194,452194],"17":[1505020],"18":[1505020,664857],"19":[2169877,1505020],"20":[664857,0],"21":[664857,664857],"22":[230,64641],"23":[64871,64871,64871,64871,64871],"24":[1,229],"25":[2,64639],"26":[1,64867],"27":[64868,230],"28":[1,664856],"29":[664857,387442,193606],"30":[64612,600244],"31":[664856,193836],"32":[129224,471020],"33":[193605,277415]},"inputSourceMap":{"version":3,"file":"/home/c/clee69/cs310/project/project_team086/src/controller/ASTTree.ts","sources":["/home/c/clee69/cs310/project/project_team086/src/controller/ASTTree.ts"],"names":[],"mappings":"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","sourcesContent":["import { InsightError } from \"./IInsightFacade\";\n\nexport const ValidFields = new Set([\n\t\"uuid\",\n\t\"id\",\n\t\"title\",\n\t\"instructor\",\n\t\"dept\",\n\t\"year\",\n\t\"avg\",\n\t\"pass\",\n\t\"fail\",\n\t\"audit\",\n\t\"fullname\",\n\t\"shortname\",\n\t\"number\",\n\t\"name\",\n\t\"address\",\n\t\"lat\",\n\t\"lon\",\n\t\"seats\",\n\t\"type\",\n\t\"furniture\",\n\t\"href\",\n]);\n\ntype LogicOperator = \"AND\" | \"OR\";\ntype ComparisionOperator = \"LT\" | \"GT\" | \"EQ\" | \"IS\";\n\ninterface BaseNode {\n\toperator: LogicOperator | ComparisionOperator | \"NOT\";\n\tevaluate(dataset: any): boolean;\n}\n\ninterface LogicNode extends BaseNode {\n\toperator: LogicOperator;\n\tchildren: ASTNode[];\n}\n\ninterface ComparisionNode extends BaseNode {\n\toperator: ComparisionOperator;\n\tfield: string;\n\tvalue: string;\n}\n\ninterface NegationNode extends BaseNode {\n\toperator: \"NOT\";\n\tchild: ASTNode;\n}\n\ntype ASTNode = LogicNode | ComparisionNode | NegationNode;\n\nexport class ASTTree {\n\tprivate root: ASTNode;\n\n\tconstructor(query: any, datasetID: string) {\n\t\tthis.root = this.buildASTTree(query, datasetID);\n\t}\n\n\tpublic evaluate(data: any): any {\n\t\treturn this.root.evaluate(data);\n\t}\n\n\tprivate buildASTTree(query: string, datasetID: string): any {\n\t\tconst [key, value] = Object.entries(query)[0];\n\t\tthis.validateValue(value);\n\n\t\tif (key === \"AND\" || key === \"OR\") {\n\t\t\tif (!Array.isArray(value) || value.length === 0) {\n\t\t\t\tthrow new InsightError(\"Must have children keys\");\n\t\t\t}\n\t\t\tconst logicalNode: LogicNode = {\n\t\t\t\toperator: key,\n\t\t\t\tchildren: value.map((child: any) => this.buildASTTree(child, datasetID)),\n\t\t\t\tevaluate: (data: any) => this.evaluateLogic(data, key, logicalNode.children),\n\t\t\t};\n\t\t\treturn logicalNode;\n\t\t}\n\n\t\tif (key === \"NOT\") {\n\t\t\tconst negationNode: NegationNode = {\n\t\t\t\toperator: key,\n\t\t\t\tchild: this.buildASTTree(value, datasetID),\n\t\t\t\tevaluate: (data: any) => !this.evaluateNode(this.buildASTTree(value, datasetID), data),\n\t\t\t};\n\t\t\treturn negationNode;\n\t\t}\n\t\tif (key === \"IS\" || key === \"EQ\" || key === \"LT\" || key === \"GT\") {\n\t\t\tthis.checkMultipleDatasets(Object.keys(value)[0], datasetID);\n\t\t\tconst [comparisionKey, comparisionValue] = Object.entries(value)[0];\n\t\t\tthis.checkForTypeEquality(comparisionKey, comparisionValue, key);\n\t\t\tconst comparisionNode: ComparisionNode = {\n\t\t\t\toperator: key as ComparisionOperator,\n\t\t\t\tfield: comparisionKey,\n\t\t\t\tvalue: comparisionValue,\n\t\t\t\tevaluate: (data: any) => this.evaluateComparision(data, key, value),\n\t\t\t};\n\t\t\treturn comparisionNode;\n\t\t}\n\t}\n\n\tprivate checkMultipleDatasets(treeField: any, datasetID: string): void {\n\t\tif (treeField.substring(0, treeField.indexOf(\"_\")) !== datasetID) {\n\t\t\tthrow new InsightError(\"multiple datasets found\");\n\t\t}\n\t}\n\n\tprivate validateValue(value: string): void {\n\t\tif (value.length === 0) {\n\t\t\tthrow new InsightError(\"No query found\");\n\t\t}\n\n\t\tif (JSON.stringify(value) === \"{}\") {\n\t\t\tthrow new InsightError(\"no keys\");\n\t\t}\n\t}\n\n\tprivate evaluateNode(node: ASTNode, data: any): boolean {\n\t\treturn node.evaluate(data);\n\t}\n\n\tprivate evaluateLogic(data: any, operator: LogicOperator, children: ASTNode[]): boolean {\n\t\tif (operator === \"AND\") {\n\t\t\treturn children.every((child: ASTNode) => this.evaluateNode(child, data));\n\t\t} else if (operator === \"OR\") {\n\t\t\treturn children.some((child) => this.evaluateNode(child, data));\n\t\t}\n\t\tthrow new InsightError(\"Invalid logic operator\");\n\t}\n\n\tprivate evaluateComparision(data: any, operator: string, value: string): any {\n\t\tconst treeQuery = Object.entries(value)[0];\n\t\tconst treeField = treeQuery[0];\n\t\tconst treeValue = treeQuery[1];\n\t\tconst treeKey = treeField.split(\"_\")[1];\n\n\t\tswitch (operator) {\n\t\t\tcase \"IS\":\n\t\t\t\treturn this.isMatchingType(data[treeKey], false) && this.matchesPattern(data[treeKey], treeValue);\n\n\t\t\tcase \"GT\":\n\t\t\t\treturn this.isMatchingType(data[treeKey]) && data[treeKey] > treeValue;\n\n\t\t\tcase \"LT\":\n\t\t\t\treturn this.isMatchingType(data[treeKey]) && data[treeKey] < treeValue;\n\n\t\t\tcase \"EQ\":\n\t\t\t\treturn this.isMatchingType(data[treeKey]) && data[treeKey] === treeValue;\n\t\t}\n\t}\n\n\t// if type = true then its an integer if not its a string\n\tprivate isMatchingType(input: string | number, type = true): boolean {\n\t\tif (typeof input === \"number\" && type) {\n\t\t\treturn true;\n\t\t} else if (typeof input === \"string\" && !type) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate checkForTypeEquality(comparisionKey: string, comparisionValue: string | number, operator: string): void {\n\t\tconst field = comparisionKey.substring(comparisionKey.indexOf(\"_\") + 1);\n\t\tif (field === \"uuid\" || field === \"id\" || field === \"title\" || field === \"instructor\" || field === \"dept\") {\n\t\t\tif (typeof comparisionValue === \"number\") {\n\t\t\t\tthrow new InsightError(\"Mismatched type\");\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof comparisionValue === \"string\") {\n\t\t\t\tthrow new InsightError(\"Mismatched Error\");\n\t\t\t}\n\t\t}\n\t\tif (operator === \"IS\" && typeof comparisionValue === \"number\") {\n\t\t\tthrow new InsightError(\"Wrong key for IS\");\n\t\t}\n\t}\n\tprivate matchesPattern(inputString: string, pattern: string): boolean {\n\t\tif (pattern.includes(\"*\") && !pattern.startsWith(\"*\") && !pattern.endsWith(\"*\")) {\n\t\t\tthrow new InsightError(\"Illegal wildcard.\");\n\t\t}\n\t\tif (pattern.startsWith(\"*\") && pattern.endsWith(\"*\")) {\n\t\t\tconst trimmedPattern = pattern.slice(1, -1);\n\t\t\treturn inputString.includes(trimmedPattern);\n\t\t} else if (pattern.startsWith(\"*\")) {\n\t\t\tconst trimmedPattern = pattern.slice(1);\n\t\t\treturn inputString.endsWith(trimmedPattern);\n\t\t} else if (pattern.endsWith(\"*\")) {\n\t\t\tconst trimmedPattern = pattern.slice(0, -1);\n\t\t\treturn inputString.startsWith(trimmedPattern);\n\t\t} else {\n\t\t\treturn inputString === pattern;\n\t\t}\n\t}\n\n\t// private printNode(node: any, depth = 0): void {\n\t// \t// Indent to represent depth of the node in the tree\n\t// \tconst indent = \" \".repeat(depth * 2);\n\n\t// \t// Print the current node\n\t// \tconsole.log(`${indent}Node Type: ${node.operator}`);\n\n\t// \t// Depending on the type of node, print relevant details\n\t// \tif (\"children\" in node && Array.isArray(node.children)) {\n\t// \t\t// For LogicNode (AND, OR), print children nodes\n\t// \t\tconsole.log(`${indent}Children:`);\n\t// \t\tnode.children.forEach((child: any) => this.printNode(child, depth + 1));\n\t// \t} else if (node.operator === \"NOT\" && \"child\" in node) {\n\t// \t\t// For NegationNode (NOT), print child node\n\t// \t\tconsole.log(`${indent}Child:`);\n\t// \t\tthis.printNode(node.child, depth + 1);\n\t// \t} else if (\"field\" in node) {\n\t// \t\t// For ComparisionNode (IS, LT, GT, EQ), print the comparison details\n\t// \t\tconsole.log(`${indent}Field: ${node.field}`);\n\t// \t\tconsole.log(`${indent}Value: ${node.value}`);\n\t// \t\tconsole.log(`${indent}function: ${node.evaluate}`);\n\t// \t}\n\t// }\n\n\t// public printTree(): void {\n\t// \tif (this.root) {\n\t// \t\tthis.printNode(this.root);\n\t// \t} else {\n\t// \t\tconsole.log(\"Tree is empty.\");\n\t// \t}\n\t// }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5e8996eb843cd419dee8a3829ba359dafbe4f833","contentHash":"ad2f5d4025370d577e4b5e368a66569f835a560f18adc934cde68a80e128c3b4"},"/home/c/clee69/cs310/project/project_team086/src/controller/DiskHandler.ts":{"path":"/home/c/clee69/cs310/project/project_team086/src/controller/DiskHandler.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":92}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":47}},"5":{"start":{"line":8,"column":19},"end":{"line":8,"column":55}},"6":{"start":{"line":9,"column":18},"end":{"line":9,"column":55}},"7":{"start":{"line":10,"column":25},"end":{"line":10,"column":52}},"8":{"start":{"line":11,"column":18},"end":{"line":11,"column":55}},"9":{"start":{"line":12,"column":24},"end":{"line":12,"column":50}},"10":{"start":{"line":14,"column":19},"end":{"line":14,"column":21}},"11":{"start":{"line":15,"column":4},"end":{"line":15,"column":65}},"12":{"start":{"line":16,"column":18},"end":{"line":16,"column":76}},"13":{"start":{"line":17,"column":4},"end":{"line":20,"column":7}},"14":{"start":{"line":18,"column":26},"end":{"line":18,"column":66}},"15":{"start":{"line":19,"column":8},"end":{"line":19,"column":31}},"16":{"start":{"line":21,"column":4},"end":{"line":21,"column":18}},"17":{"start":{"line":24,"column":16},"end":{"line":24,"column":34}},"18":{"start":{"line":25,"column":28},"end":{"line":37,"column":6}},"19":{"start":{"line":26,"column":25},"end":{"line":26,"column":91}},"20":{"start":{"line":27,"column":27},"end":{"line":27,"column":59}},"21":{"start":{"line":28,"column":24},"end":{"line":28,"column":67}},"22":{"start":{"line":29,"column":25},"end":{"line":29,"column":226}},"23":{"start":{"line":29,"column":59},"end":{"line":29,"column":225}},"24":{"start":{"line":30,"column":8},"end":{"line":32,"column":11}},"25":{"start":{"line":31,"column":12},"end":{"line":31,"column":43}},"26":{"start":{"line":33,"column":8},"end":{"line":36,"column":9}},"27":{"start":{"line":34,"column":12},"end":{"line":34,"column":38}},"28":{"start":{"line":35,"column":12},"end":{"line":35,"column":36}},"29":{"start":{"line":38,"column":4},"end":{"line":38,"column":39}},"30":{"start":{"line":40,"column":0},"end":{"line":40,"column":44}},"31":{"start":{"line":42,"column":21},"end":{"line":42,"column":80}},"32":{"start":{"line":43,"column":4},"end":{"line":50,"column":5}},"33":{"start":{"line":44,"column":24},"end":{"line":44,"column":67}},"34":{"start":{"line":45,"column":25},"end":{"line":45,"column":226}},"35":{"start":{"line":45,"column":59},"end":{"line":45,"column":225}},"36":{"start":{"line":46,"column":8},"end":{"line":46,"column":24}},"37":{"start":{"line":49,"column":8},"end":{"line":49,"column":93}},"38":{"start":{"line":52,"column":0},"end":{"line":52,"column":50}},"39":{"start":{"line":54,"column":20},"end":{"line":54,"column":44}},"40":{"start":{"line":55,"column":21},"end":{"line":55,"column":63}},"41":{"start":{"line":56,"column":4},"end":{"line":56,"column":48}},"42":{"start":{"line":57,"column":23},"end":{"line":71,"column":5}},"43":{"start":{"line":59,"column":58},"end":{"line":70,"column":9}},"44":{"start":{"line":72,"column":4},"end":{"line":77,"column":5}},"45":{"start":{"line":73,"column":8},"end":{"line":73,"column":65}},"46":{"start":{"line":76,"column":8},"end":{"line":76,"column":69}},"47":{"start":{"line":79,"column":0},"end":{"line":79,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"getDiskIDs","decl":{"start":{"line":13,"column":15},"end":{"line":13,"column":25}},"loc":{"start":{"line":13,"column":28},"end":{"line":22,"column":1}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":18},"end":{"line":17,"column":19}},"loc":{"start":{"line":17,"column":28},"end":{"line":20,"column":5}},"line":17},"3":{"name":"addCacheToMemory","decl":{"start":{"line":23,"column":15},"end":{"line":23,"column":31}},"loc":{"start":{"line":23,"column":51},"end":{"line":39,"column":1}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":36},"end":{"line":25,"column":37}},"loc":{"start":{"line":25,"column":57},"end":{"line":37,"column":5}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":29,"column":46},"end":{"line":29,"column":47}},"loc":{"start":{"line":29,"column":59},"end":{"line":29,"column":225}},"line":29},"6":{"name":"(anonymous_6)","decl":{"start":{"line":30,"column":25},"end":{"line":30,"column":26}},"loc":{"start":{"line":30,"column":38},"end":{"line":32,"column":9}},"line":30},"7":{"name":"loadDatasetFromDisk","decl":{"start":{"line":41,"column":15},"end":{"line":41,"column":34}},"loc":{"start":{"line":41,"column":39},"end":{"line":51,"column":1}},"line":41},"8":{"name":"(anonymous_8)","decl":{"start":{"line":45,"column":46},"end":{"line":45,"column":47}},"loc":{"start":{"line":45,"column":59},"end":{"line":45,"column":225}},"line":45},"9":{"name":"saveDatasetToDisk","decl":{"start":{"line":53,"column":15},"end":{"line":53,"column":32}},"loc":{"start":{"line":53,"column":46},"end":{"line":78,"column":1}},"line":53},"10":{"name":"(anonymous_10)","decl":{"start":{"line":59,"column":44},"end":{"line":59,"column":45}},"loc":{"start":{"line":59,"column":58},"end":{"line":70,"column":9}},"line":59}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":33,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":36,"column":9}},{"start":{"line":33,"column":8},"end":{"line":36,"column":9}}],"line":33}},"s":{"0":1,"1":4,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":101,"11":101,"12":101,"13":101,"14":69,"15":69,"16":101,"17":101,"18":101,"19":69,"20":69,"21":69,"22":69,"23":777402,"24":69,"25":777402,"26":69,"27":3,"28":3,"29":101,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":44,"40":44,"41":44,"42":44,"43":906017,"44":44,"45":44,"46":0,"47":1},"f":{"0":4,"1":101,"2":69,"3":101,"4":69,"5":777402,"6":777402,"7":0,"8":0,"9":44,"10":906017},"b":{"0":[1,1,1],"1":[2,2],"2":[4,4],"3":[3,66]},"inputSourceMap":{"version":3,"file":"/home/c/clee69/cs310/project/project_team086/src/controller/DiskHandler.ts","sources":["/home/c/clee69/cs310/project/project_team086/src/controller/DiskHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import path from \"path\";\nimport fs from \"fs-extra\";\nimport Dataset from \"./Dataset\";\nimport { InsightError } from \"./IInsightFacade\";\nimport Section from \"./Section\";\nimport { DATA_DIR } from \"./InsightFacade\";\n\nasync function getDiskIDs(): Promise<any> {\n\tconst result: string[] = [];\n\tawait fs.ensureDir(DATA_DIR);\n\tconst files = await fs.readdir(DATA_DIR);\n\tfiles.forEach((file: string) => {\n\t\tconst truncated = file.substring(0, file.lastIndexOf(\".\"));\n\t\tresult.push(truncated);\n\t});\n\treturn result;\n}\n\nexport async function addCacheToMemory(memory: Dataset[], memoryIds: string[]): Promise<void> {\n\tconst ids = await getDiskIDs();\n\tconst datasetPromises = ids.map(async (datasetID: string) => {\n\t\tconst filePath = path.join(DATA_DIR, `${datasetID}.json`);\n\t\tconst newDataset = new Dataset(datasetID);\n\n\t\tconst dataset = await fs.readJson(filePath);\n\n\t\tconst sections: Section[] = dataset.sections.map(\n\t\t\t(section: any) =>\n\t\t\t\tnew Section(\n\t\t\t\t\tsection.uuid,\n\t\t\t\t\tsection.id,\n\t\t\t\t\tsection.title,\n\t\t\t\t\tsection.instructor,\n\t\t\t\t\tsection.dept,\n\t\t\t\t\tsection.year,\n\t\t\t\t\tsection.avg,\n\t\t\t\t\tsection.pass,\n\t\t\t\t\tsection.fail,\n\t\t\t\t\tsection.audit\n\t\t\t\t)\n\t\t);\n\n\t\tsections.forEach((section) => {\n\t\t\tnewDataset.addSection(section);\n\t\t});\n\t\tif (!memoryIds.includes(datasetID)) {\n\t\t\tmemoryIds.push(datasetID);\n\t\t\tmemory.push(newDataset);\n\t\t}\n\t});\n\n\tawait Promise.all(datasetPromises);\n}\n\nexport async function loadDatasetFromDisk(this: any, id: string): Promise<Section[]> {\n\tconst filePath = path.join(DATA_DIR, `${id}.json`);\n\n\ttry {\n\t\tconst dataset = await fs.readJson(filePath); // Read the dataset JSON file\n\n\t\tconst sections: Section[] = dataset.sections.map(\n\t\t\t(section: any) =>\n\t\t\t\tnew Section(\n\t\t\t\t\tsection.uuid,\n\t\t\t\t\tsection.id,\n\t\t\t\t\tsection.title,\n\t\t\t\t\tsection.instructor,\n\t\t\t\t\tsection.dept,\n\t\t\t\t\tsection.year,\n\t\t\t\t\tsection.avg,\n\t\t\t\t\tsection.pass,\n\t\t\t\t\tsection.fail,\n\t\t\t\t\tsection.audit\n\t\t\t\t)\n\t\t);\n\n\t\treturn sections;\n\t} catch (error) {\n\t\tthrow new InsightError(`Error loading dataset from disk: ${error}`);\n\t}\n}\n\nexport async function saveDatasetToDisk(dataset: Dataset, id: string): Promise<void> {\n\tconst dirPath = DATA_DIR; // Use the directory path defined earlier\n\tconst filePath = path.join(dirPath, `${id}.json`);\n\n\t// Check if the data directory exists; if not, create it\n\tawait fs.ensureDir(dirPath); // This will create the directory if it does not exist\n\tconst dataToSave = {\n\t\tdatasetID: dataset.getDatasetID(),\n\t\tsections: dataset.getSections().map((section) => ({\n\t\t\tuuid: String(section.getUuid()),\n\t\t\tid: section.getId(),\n\t\t\ttitle: section.getTitle(),\n\t\t\tinstructor: section.getInstructor(),\n\t\t\tdept: section.getDept(),\n\t\t\tyear: Number(section.getYear()),\n\t\t\tavg: section.getAvg(),\n\t\t\tpass: section.getPass(),\n\t\t\tfail: section.getFail(),\n\t\t\taudit: section.getAudit(),\n\t\t})), // Ensure only serializable properties are included\n\t};\n\ttry {\n\t\tawait fs.writeJson(filePath, dataToSave);\n\t} catch {\n\t\tthrow new InsightError(\"writeJSON failed!\");\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c3a811782bd907fa45a69f1fc49c81a580093013","contentHash":"57b8d1c11958580fbd9027f95b55158ab289986dde13b49402643a24f04fa11e"},"/home/c/clee69/cs310/project/project_team086/src/controller/TransformationManipulations.ts":{"path":"/home/c/clee69/cs310/project/project_team086/src/controller/TransformationManipulations.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":132}},"4":{"start":{"line":7,"column":18},"end":{"line":7,"column":38}},"5":{"start":{"line":8,"column":25},"end":{"line":8,"column":52}},"6":{"start":{"line":9,"column":21},"end":{"line":9,"column":59}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":73}},"8":{"start":{"line":11,"column":22},"end":{"line":11,"column":94}},"9":{"start":{"line":13,"column":20},"end":{"line":13,"column":35}},"10":{"start":{"line":14,"column":18},"end":{"line":14,"column":31}},"11":{"start":{"line":15,"column":22},"end":{"line":15,"column":31}},"12":{"start":{"line":16,"column":20},"end":{"line":16,"column":24}},"13":{"start":{"line":17,"column":4},"end":{"line":28,"column":7}},"14":{"start":{"line":18,"column":8},"end":{"line":27,"column":9}},"15":{"start":{"line":19,"column":33},"end":{"line":19,"column":50}},"16":{"start":{"line":20,"column":12},"end":{"line":22,"column":13}},"17":{"start":{"line":21,"column":16},"end":{"line":21,"column":88}},"18":{"start":{"line":23,"column":12},"end":{"line":23,"column":48}},"19":{"start":{"line":26,"column":12},"end":{"line":26,"column":34}},"20":{"start":{"line":29,"column":4},"end":{"line":29,"column":56}},"21":{"start":{"line":30,"column":4},"end":{"line":35,"column":5}},"22":{"start":{"line":31,"column":8},"end":{"line":31,"column":25}},"23":{"start":{"line":34,"column":8},"end":{"line":34,"column":18}},"24":{"start":{"line":37,"column":0},"end":{"line":37,"column":38}},"25":{"start":{"line":39,"column":4},"end":{"line":60,"column":5}},"26":{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},"27":{"start":{"line":41,"column":12},"end":{"line":41,"column":105}},"28":{"start":{"line":44,"column":9},"end":{"line":60,"column":5}},"29":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"30":{"start":{"line":46,"column":12},"end":{"line":46,"column":72}},"31":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"32":{"start":{"line":49,"column":12},"end":{"line":49,"column":94}},"33":{"start":{"line":51,"column":21},"end":{"line":51,"column":31}},"34":{"start":{"line":52,"column":8},"end":{"line":59,"column":11}},"35":{"start":{"line":53,"column":12},"end":{"line":55,"column":13}},"36":{"start":{"line":54,"column":16},"end":{"line":54,"column":112}},"37":{"start":{"line":56,"column":12},"end":{"line":58,"column":13}},"38":{"start":{"line":57,"column":16},"end":{"line":57,"column":113}},"39":{"start":{"line":63,"column":4},"end":{"line":63,"column":77}},"40":{"start":{"line":65,"column":0},"end":{"line":65,"column":42}},"41":{"start":{"line":67,"column":19},"end":{"line":69,"column":6}},"42":{"start":{"line":68,"column":8},"end":{"line":68,"column":35}},"43":{"start":{"line":70,"column":27},"end":{"line":70,"column":56}},"44":{"start":{"line":71,"column":20},"end":{"line":71,"column":56}},"45":{"start":{"line":72,"column":4},"end":{"line":72,"column":19}},"46":{"start":{"line":74,"column":0},"end":{"line":74,"column":44}},"47":{"start":{"line":76,"column":20},"end":{"line":76,"column":35}},"48":{"start":{"line":77,"column":18},"end":{"line":77,"column":39}},"49":{"start":{"line":78,"column":18},"end":{"line":78,"column":39}},"50":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"51":{"start":{"line":80,"column":8},"end":{"line":80,"column":83}},"52":{"start":{"line":82,"column":4},"end":{"line":84,"column":5}},"53":{"start":{"line":83,"column":8},"end":{"line":83,"column":83}},"54":{"start":{"line":85,"column":26},"end":{"line":85,"column":35}},"55":{"start":{"line":86,"column":4},"end":{"line":91,"column":7}},"56":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"57":{"start":{"line":88,"column":12},"end":{"line":88,"column":74}},"58":{"start":{"line":90,"column":8},"end":{"line":90,"column":31}},"59":{"start":{"line":92,"column":4},"end":{"line":92,"column":60}},"60":{"start":{"line":93,"column":4},"end":{"line":97,"column":7}},"61":{"start":{"line":94,"column":8},"end":{"line":96,"column":9}},"62":{"start":{"line":95,"column":12},"end":{"line":95,"column":74}},"63":{"start":{"line":100,"column":22},"end":{"line":100,"column":24}},"64":{"start":{"line":101,"column":4},"end":{"line":132,"column":7}},"65":{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},"66":{"start":{"line":103,"column":12},"end":{"line":103,"column":87}},"67":{"start":{"line":105,"column":20},"end":{"line":105,"column":39}},"68":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"69":{"start":{"line":107,"column":12},"end":{"line":107,"column":76}},"70":{"start":{"line":109,"column":8},"end":{"line":109,"column":28}},"71":{"start":{"line":110,"column":26},"end":{"line":110,"column":51}},"72":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"73":{"start":{"line":112,"column":12},"end":{"line":112,"column":77}},"74":{"start":{"line":114,"column":27},"end":{"line":114,"column":58}},"75":{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},"76":{"start":{"line":116,"column":12},"end":{"line":116,"column":75}},"77":{"start":{"line":118,"column":36},"end":{"line":118,"column":57}},"78":{"start":{"line":119,"column":8},"end":{"line":121,"column":9}},"79":{"start":{"line":120,"column":12},"end":{"line":120,"column":88}},"80":{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},"81":{"start":{"line":123,"column":12},"end":{"line":123,"column":72}},"82":{"start":{"line":125,"column":8},"end":{"line":127,"column":9}},"83":{"start":{"line":126,"column":12},"end":{"line":126,"column":85}},"84":{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},"85":{"start":{"line":129,"column":12},"end":{"line":129,"column":74}},"86":{"start":{"line":131,"column":8},"end":{"line":131,"column":31}},"87":{"start":{"line":135,"column":22},"end":{"line":135,"column":31}},"88":{"start":{"line":136,"column":4},"end":{"line":146,"column":7}},"89":{"start":{"line":137,"column":23},"end":{"line":137,"column":25}},"90":{"start":{"line":138,"column":8},"end":{"line":140,"column":11}},"91":{"start":{"line":139,"column":12},"end":{"line":139,"column":43}},"92":{"start":{"line":141,"column":8},"end":{"line":141,"column":62}},"93":{"start":{"line":142,"column":8},"end":{"line":144,"column":9}},"94":{"start":{"line":143,"column":12},"end":{"line":143,"column":40}},"95":{"start":{"line":145,"column":8},"end":{"line":145,"column":45}},"96":{"start":{"line":147,"column":4},"end":{"line":147,"column":21}},"97":{"start":{"line":150,"column":20},"end":{"line":150,"column":22}},"98":{"start":{"line":151,"column":23},"end":{"line":151,"column":50}},"99":{"start":{"line":152,"column":20},"end":{"line":152,"column":41}},"100":{"start":{"line":153,"column":24},"end":{"line":153,"column":51}},"101":{"start":{"line":154,"column":4},"end":{"line":159,"column":5}},"102":{"start":{"line":155,"column":33},"end":{"line":155,"column":70}},"103":{"start":{"line":156,"column":8},"end":{"line":156,"column":69}},"104":{"start":{"line":157,"column":28},"end":{"line":157,"column":75}},"105":{"start":{"line":158,"column":8},"end":{"line":158,"column":34}},"106":{"start":{"line":160,"column":4},"end":{"line":160,"column":19}},"107":{"start":{"line":163,"column":29},"end":{"line":163,"column":31}},"108":{"start":{"line":164,"column":4},"end":{"line":168,"column":7}},"109":{"start":{"line":165,"column":25},"end":{"line":165,"column":50}},"110":{"start":{"line":166,"column":31},"end":{"line":166,"column":69}},"111":{"start":{"line":167,"column":8},"end":{"line":167,"column":95}},"112":{"start":{"line":169,"column":4},"end":{"line":169,"column":28}},"113":{"start":{"line":172,"column":16},"end":{"line":172,"column":17}},"114":{"start":{"line":173,"column":4},"end":{"line":194,"column":5}},"115":{"start":{"line":175,"column":12},"end":{"line":175,"column":69}},"116":{"start":{"line":175,"column":54},"end":{"line":175,"column":66}},"117":{"start":{"line":177,"column":12},"end":{"line":177,"column":69}},"118":{"start":{"line":177,"column":54},"end":{"line":177,"column":66}},"119":{"start":{"line":179,"column":24},"end":{"line":179,"column":51}},"120":{"start":{"line":180,"column":12},"end":{"line":180,"column":74}},"121":{"start":{"line":180,"column":40},"end":{"line":180,"column":71}},"122":{"start":{"line":181,"column":12},"end":{"line":181,"column":76}},"123":{"start":{"line":184,"column":24},"end":{"line":184,"column":51}},"124":{"start":{"line":185,"column":12},"end":{"line":185,"column":100}},"125":{"start":{"line":185,"column":40},"end":{"line":185,"column":97}},"126":{"start":{"line":186,"column":12},"end":{"line":186,"column":46}},"127":{"start":{"line":189,"column":33},"end":{"line":189,"column":78}},"128":{"start":{"line":189,"column":64},"end":{"line":189,"column":76}},"129":{"start":{"line":190,"column":12},"end":{"line":190,"column":37}},"130":{"start":{"line":193,"column":12},"end":{"line":193,"column":61}},"131":{"start":{"line":197,"column":27},"end":{"line":197,"column":46}},"132":{"start":{"line":198,"column":4},"end":{"line":201,"column":7}},"133":{"start":{"line":199,"column":30},"end":{"line":199,"column":54}},"134":{"start":{"line":200,"column":8},"end":{"line":200,"column":64}},"135":{"start":{"line":204,"column":4},"end":{"line":214,"column":11}},"136":{"start":{"line":205,"column":22},"end":{"line":205,"column":74}},"137":{"start":{"line":206,"column":8},"end":{"line":212,"column":9}},"138":{"start":{"line":207,"column":26},"end":{"line":207,"column":57}},"139":{"start":{"line":208,"column":12},"end":{"line":208,"column":31}},"140":{"start":{"line":211,"column":12},"end":{"line":211,"column":49}},"141":{"start":{"line":213,"column":8},"end":{"line":213,"column":19}},"142":{"start":{"line":217,"column":4},"end":{"line":234,"column":7}},"143":{"start":{"line":218,"column":8},"end":{"line":220,"column":9}},"144":{"start":{"line":219,"column":12},"end":{"line":219,"column":22}},"145":{"start":{"line":221,"column":8},"end":{"line":223,"column":9}},"146":{"start":{"line":222,"column":12},"end":{"line":222,"column":21}},"147":{"start":{"line":224,"column":23},"end":{"line":224,"column":79}},"148":{"start":{"line":224,"column":56},"end":{"line":224,"column":78}},"149":{"start":{"line":225,"column":8},"end":{"line":232,"column":9}},"150":{"start":{"line":226,"column":12},"end":{"line":228,"column":13}},"151":{"start":{"line":227,"column":16},"end":{"line":227,"column":26}},"152":{"start":{"line":229,"column":12},"end":{"line":231,"column":13}},"153":{"start":{"line":230,"column":16},"end":{"line":230,"column":25}},"154":{"start":{"line":233,"column":8},"end":{"line":233,"column":17}},"155":{"start":{"line":236,"column":0},"end":{"line":236,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"validateRooms","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":22}},"loc":{"start":{"line":12,"column":32},"end":{"line":36,"column":1}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":20},"end":{"line":17,"column":21}},"loc":{"start":{"line":17,"column":32},"end":{"line":28,"column":5}},"line":17},"3":{"name":"validateOrder","decl":{"start":{"line":38,"column":9},"end":{"line":38,"column":22}},"loc":{"start":{"line":38,"column":61},"end":{"line":61,"column":1}},"line":38},"4":{"name":"(anonymous_4)","decl":{"start":{"line":52,"column":21},"end":{"line":52,"column":22}},"loc":{"start":{"line":52,"column":30},"end":{"line":59,"column":9}},"line":52},"5":{"name":"applyValidation","decl":{"start":{"line":62,"column":9},"end":{"line":62,"column":24}},"loc":{"start":{"line":62,"column":43},"end":{"line":64,"column":1}},"line":62},"6":{"name":"transformResults","decl":{"start":{"line":66,"column":9},"end":{"line":66,"column":25}},"loc":{"start":{"line":66,"column":39},"end":{"line":73,"column":1}},"line":66},"7":{"name":"(anonymous_7)","decl":{"start":{"line":67,"column":51},"end":{"line":67,"column":52}},"loc":{"start":{"line":67,"column":62},"end":{"line":69,"column":5}},"line":67},"8":{"name":"validateTransformations","decl":{"start":{"line":75,"column":9},"end":{"line":75,"column":32}},"loc":{"start":{"line":75,"column":70},"end":{"line":98,"column":1}},"line":75},"9":{"name":"(anonymous_9)","decl":{"start":{"line":86,"column":18},"end":{"line":86,"column":19}},"loc":{"start":{"line":86,"column":27},"end":{"line":91,"column":5}},"line":86},"10":{"name":"(anonymous_10)","decl":{"start":{"line":93,"column":20},"end":{"line":93,"column":21}},"loc":{"start":{"line":93,"column":29},"end":{"line":97,"column":5}},"line":93},"11":{"name":"validateApply","decl":{"start":{"line":99,"column":9},"end":{"line":99,"column":22}},"loc":{"start":{"line":99,"column":65},"end":{"line":133,"column":1}},"line":99},"12":{"name":"(anonymous_12)","decl":{"start":{"line":101,"column":18},"end":{"line":101,"column":19}},"loc":{"start":{"line":101,"column":27},"end":{"line":132,"column":5}},"line":101},"13":{"name":"createGroupings","decl":{"start":{"line":134,"column":9},"end":{"line":134,"column":24}},"loc":{"start":{"line":134,"column":39},"end":{"line":148,"column":1}},"line":134},"14":{"name":"(anonymous_14)","decl":{"start":{"line":136,"column":17},"end":{"line":136,"column":18}},"loc":{"start":{"line":136,"column":28},"end":{"line":146,"column":5}},"line":136},"15":{"name":"(anonymous_15)","decl":{"start":{"line":138,"column":23},"end":{"line":138,"column":24}},"loc":{"start":{"line":138,"column":34},"end":{"line":140,"column":9}},"line":138},"16":{"name":"applyToGroups","decl":{"start":{"line":149,"column":9},"end":{"line":149,"column":22}},"loc":{"start":{"line":149,"column":43},"end":{"line":161,"column":1}},"line":149},"17":{"name":"applyAggregation","decl":{"start":{"line":162,"column":9},"end":{"line":162,"column":25}},"loc":{"start":{"line":162,"column":47},"end":{"line":170,"column":1}},"line":162},"18":{"name":"(anonymous_18)","decl":{"start":{"line":164,"column":23},"end":{"line":164,"column":24}},"loc":{"start":{"line":164,"column":38},"end":{"line":168,"column":5}},"line":164},"19":{"name":"calculateAggregation","decl":{"start":{"line":171,"column":9},"end":{"line":171,"column":29}},"loc":{"start":{"line":171,"column":53},"end":{"line":195,"column":1}},"line":171},"20":{"name":"(anonymous_20)","decl":{"start":{"line":175,"column":43},"end":{"line":175,"column":44}},"loc":{"start":{"line":175,"column":54},"end":{"line":175,"column":66}},"line":175},"21":{"name":"(anonymous_21)","decl":{"start":{"line":177,"column":43},"end":{"line":177,"column":44}},"loc":{"start":{"line":177,"column":54},"end":{"line":177,"column":66}},"line":177},"22":{"name":"(anonymous_22)","decl":{"start":{"line":180,"column":28},"end":{"line":180,"column":29}},"loc":{"start":{"line":180,"column":40},"end":{"line":180,"column":71}},"line":180},"23":{"name":"(anonymous_23)","decl":{"start":{"line":185,"column":28},"end":{"line":185,"column":29}},"loc":{"start":{"line":185,"column":40},"end":{"line":185,"column":97}},"line":185},"24":{"name":"(anonymous_24)","decl":{"start":{"line":189,"column":53},"end":{"line":189,"column":54}},"loc":{"start":{"line":189,"column":64},"end":{"line":189,"column":76}},"line":189},"25":{"name":"populateGroupFields","decl":{"start":{"line":196,"column":9},"end":{"line":196,"column":28}},"loc":{"start":{"line":196,"column":70},"end":{"line":202,"column":1}},"line":196},"26":{"name":"(anonymous_26)","decl":{"start":{"line":198,"column":24},"end":{"line":198,"column":25}},"loc":{"start":{"line":198,"column":47},"end":{"line":201,"column":5}},"line":198},"27":{"name":"constructFinalResult","decl":{"start":{"line":203,"column":9},"end":{"line":203,"column":29}},"loc":{"start":{"line":203,"column":57},"end":{"line":215,"column":1}},"line":203},"28":{"name":"(anonymous_28)","decl":{"start":{"line":204,"column":26},"end":{"line":204,"column":27}},"loc":{"start":{"line":204,"column":43},"end":{"line":214,"column":5}},"line":204},"29":{"name":"sortResults","decl":{"start":{"line":216,"column":9},"end":{"line":216,"column":20}},"loc":{"start":{"line":216,"column":42},"end":{"line":235,"column":1}},"line":216},"30":{"name":"(anonymous_30)","decl":{"start":{"line":217,"column":27},"end":{"line":217,"column":28}},"loc":{"start":{"line":217,"column":37},"end":{"line":234,"column":5}},"line":217},"31":{"name":"(anonymous_31)","decl":{"start":{"line":224,"column":45},"end":{"line":224,"column":46}},"loc":{"start":{"line":224,"column":56},"end":{"line":224,"column":78}},"line":224}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":18,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":27,"column":9}},{"start":{"line":18,"column":8},"end":{"line":27,"column":9}}],"line":18},"4":{"loc":{"start":{"line":20,"column":12},"end":{"line":22,"column":13}},"type":"if","locations":[{"start":{"line":20,"column":12},"end":{"line":22,"column":13}},{"start":{"line":20,"column":12},"end":{"line":22,"column":13}}],"line":20},"5":{"loc":{"start":{"line":20,"column":16},"end":{"line":20,"column":53}},"type":"binary-expr","locations":[{"start":{"line":20,"column":16},"end":{"line":20,"column":25}},{"start":{"line":20,"column":29},"end":{"line":20,"column":53}}],"line":20},"6":{"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":47}},"type":"binary-expr","locations":[{"start":{"line":23,"column":24},"end":{"line":23,"column":33}},{"start":{"line":23,"column":37},"end":{"line":23,"column":47}}],"line":23},"7":{"loc":{"start":{"line":30,"column":4},"end":{"line":35,"column":5}},"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":35,"column":5}},{"start":{"line":30,"column":4},"end":{"line":35,"column":5}}],"line":30},"8":{"loc":{"start":{"line":39,"column":4},"end":{"line":60,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":60,"column":5}},{"start":{"line":39,"column":4},"end":{"line":60,"column":5}}],"line":39},"9":{"loc":{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},{"start":{"line":40,"column":8},"end":{"line":42,"column":9}}],"line":40},"10":{"loc":{"start":{"line":40,"column":12},"end":{"line":40,"column":61}},"type":"binary-expr","locations":[{"start":{"line":40,"column":12},"end":{"line":40,"column":36}},{"start":{"line":40,"column":40},"end":{"line":40,"column":61}}],"line":40},"11":{"loc":{"start":{"line":44,"column":9},"end":{"line":60,"column":5}},"type":"if","locations":[{"start":{"line":44,"column":9},"end":{"line":60,"column":5}},{"start":{"line":44,"column":9},"end":{"line":60,"column":5}}],"line":44},"12":{"loc":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},{"start":{"line":45,"column":8},"end":{"line":47,"column":9}}],"line":45},"13":{"loc":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},{"start":{"line":48,"column":8},"end":{"line":50,"column":9}}],"line":48},"14":{"loc":{"start":{"line":48,"column":12},"end":{"line":48,"column":54}},"type":"binary-expr","locations":[{"start":{"line":48,"column":12},"end":{"line":48,"column":30}},{"start":{"line":48,"column":34},"end":{"line":48,"column":54}}],"line":48},"15":{"loc":{"start":{"line":53,"column":12},"end":{"line":55,"column":13}},"type":"if","locations":[{"start":{"line":53,"column":12},"end":{"line":55,"column":13}},{"start":{"line":53,"column":12},"end":{"line":55,"column":13}}],"line":53},"16":{"loc":{"start":{"line":53,"column":16},"end":{"line":53,"column":61}},"type":"binary-expr","locations":[{"start":{"line":53,"column":16},"end":{"line":53,"column":38}},{"start":{"line":53,"column":42},"end":{"line":53,"column":61}}],"line":53},"17":{"loc":{"start":{"line":56,"column":12},"end":{"line":58,"column":13}},"type":"if","locations":[{"start":{"line":56,"column":12},"end":{"line":58,"column":13}},{"start":{"line":56,"column":12},"end":{"line":58,"column":13}}],"line":56},"18":{"loc":{"start":{"line":56,"column":16},"end":{"line":56,"column":68}},"type":"binary-expr","locations":[{"start":{"line":56,"column":16},"end":{"line":56,"column":33}},{"start":{"line":56,"column":37},"end":{"line":56,"column":68}}],"line":56},"19":{"loc":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},{"start":{"line":79,"column":4},"end":{"line":81,"column":5}}],"line":79},"20":{"loc":{"start":{"line":82,"column":4},"end":{"line":84,"column":5}},"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":84,"column":5}},{"start":{"line":82,"column":4},"end":{"line":84,"column":5}}],"line":82},"21":{"loc":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},{"start":{"line":87,"column":8},"end":{"line":89,"column":9}}],"line":87},"22":{"loc":{"start":{"line":94,"column":8},"end":{"line":96,"column":9}},"type":"if","locations":[{"start":{"line":94,"column":8},"end":{"line":96,"column":9}},{"start":{"line":94,"column":8},"end":{"line":96,"column":9}}],"line":94},"23":{"loc":{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},"type":"if","locations":[{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},{"start":{"line":102,"column":8},"end":{"line":104,"column":9}}],"line":102},"24":{"loc":{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},"type":"if","locations":[{"start":{"line":106,"column":8},"end":{"line":108,"column":9}},{"start":{"line":106,"column":8},"end":{"line":108,"column":9}}],"line":106},"25":{"loc":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},{"start":{"line":111,"column":8},"end":{"line":113,"column":9}}],"line":111},"26":{"loc":{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},"type":"if","locations":[{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},{"start":{"line":115,"column":8},"end":{"line":117,"column":9}}],"line":115},"27":{"loc":{"start":{"line":119,"column":8},"end":{"line":121,"column":9}},"type":"if","locations":[{"start":{"line":119,"column":8},"end":{"line":121,"column":9}},{"start":{"line":119,"column":8},"end":{"line":121,"column":9}}],"line":119},"28":{"loc":{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},"type":"if","locations":[{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},{"start":{"line":122,"column":8},"end":{"line":124,"column":9}}],"line":122},"29":{"loc":{"start":{"line":125,"column":8},"end":{"line":127,"column":9}},"type":"if","locations":[{"start":{"line":125,"column":8},"end":{"line":127,"column":9}},{"start":{"line":125,"column":8},"end":{"line":127,"column":9}}],"line":125},"30":{"loc":{"start":{"line":125,"column":12},"end":{"line":125,"column":78}},"type":"binary-expr","locations":[{"start":{"line":125,"column":12},"end":{"line":125,"column":49}},{"start":{"line":125,"column":53},"end":{"line":125,"column":78}}],"line":125},"31":{"loc":{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},"type":"if","locations":[{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},{"start":{"line":128,"column":8},"end":{"line":130,"column":9}}],"line":128},"32":{"loc":{"start":{"line":142,"column":8},"end":{"line":144,"column":9}},"type":"if","locations":[{"start":{"line":142,"column":8},"end":{"line":144,"column":9}},{"start":{"line":142,"column":8},"end":{"line":144,"column":9}}],"line":142},"33":{"loc":{"start":{"line":173,"column":4},"end":{"line":194,"column":5}},"type":"switch","locations":[{"start":{"line":174,"column":8},"end":{"line":175,"column":69}},{"start":{"line":176,"column":8},"end":{"line":177,"column":69}},{"start":{"line":178,"column":8},"end":{"line":182,"column":9}},{"start":{"line":183,"column":8},"end":{"line":187,"column":9}},{"start":{"line":188,"column":8},"end":{"line":191,"column":9}},{"start":{"line":192,"column":8},"end":{"line":193,"column":61}}],"line":173},"34":{"loc":{"start":{"line":205,"column":22},"end":{"line":205,"column":74}},"type":"cond-expr","locations":[{"start":{"line":205,"column":45},"end":{"line":205,"column":65}},{"start":{"line":205,"column":68},"end":{"line":205,"column":74}}],"line":205},"35":{"loc":{"start":{"line":206,"column":8},"end":{"line":212,"column":9}},"type":"if","locations":[{"start":{"line":206,"column":8},"end":{"line":212,"column":9}},{"start":{"line":206,"column":8},"end":{"line":212,"column":9}}],"line":206},"36":{"loc":{"start":{"line":218,"column":8},"end":{"line":220,"column":9}},"type":"if","locations":[{"start":{"line":218,"column":8},"end":{"line":220,"column":9}},{"start":{"line":218,"column":8},"end":{"line":220,"column":9}}],"line":218},"37":{"loc":{"start":{"line":221,"column":8},"end":{"line":223,"column":9}},"type":"if","locations":[{"start":{"line":221,"column":8},"end":{"line":223,"column":9}},{"start":{"line":221,"column":8},"end":{"line":223,"column":9}}],"line":221},"38":{"loc":{"start":{"line":226,"column":12},"end":{"line":228,"column":13}},"type":"if","locations":[{"start":{"line":226,"column":12},"end":{"line":228,"column":13}},{"start":{"line":226,"column":12},"end":{"line":228,"column":13}}],"line":226},"39":{"loc":{"start":{"line":229,"column":12},"end":{"line":231,"column":13}},"type":"if","locations":[{"start":{"line":229,"column":12},"end":{"line":231,"column":13}},{"start":{"line":229,"column":12},"end":{"line":231,"column":13}}],"line":229}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":17,"10":17,"11":17,"12":17,"13":17,"14":46,"15":26,"16":26,"17":0,"18":26,"19":20,"20":17,"21":17,"22":17,"23":0,"24":1,"25":17,"26":6,"27":0,"28":11,"29":7,"30":0,"31":7,"32":0,"33":7,"34":7,"35":7,"36":0,"37":7,"38":0,"39":17,"40":1,"41":4,"42":7,"43":4,"44":4,"45":4,"46":1,"47":17,"48":17,"49":17,"50":17,"51":1,"52":16,"53":1,"54":15,"55":15,"56":23,"57":2,"58":21,"59":13,"60":6,"61":17,"62":2,"63":13,"64":13,"65":16,"66":0,"67":16,"68":16,"69":1,"70":15,"71":15,"72":15,"73":0,"74":15,"75":15,"76":1,"77":14,"78":14,"79":1,"80":13,"81":1,"82":12,"83":2,"84":10,"85":1,"86":9,"87":4,"88":4,"89":64777,"90":64777,"91":64942,"92":64777,"93":64777,"94":3881,"95":64777,"96":4,"97":4,"98":4,"99":4,"100":4,"101":4,"102":3881,"103":3881,"104":3881,"105":3881,"106":4,"107":3881,"108":3881,"109":3968,"110":3968,"111":3968,"112":3881,"113":3968,"114":3968,"115":29,"116":55,"117":29,"118":55,"119":3794,"120":3794,"121":64612,"122":3794,"123":29,"124":29,"125":55,"126":29,"127":87,"128":165,"129":87,"130":0,"131":3881,"132":3881,"133":3968,"134":3968,"135":3881,"136":7936,"137":7936,"138":87,"139":87,"140":7849,"141":7936,"142":24,"143":923995,"144":477095,"145":446900,"146":294344,"147":152556,"148":306782,"149":152556,"150":153114,"151":167,"152":152947,"153":114814,"154":37575,"155":1},"f":{"0":1,"1":17,"2":46,"3":17,"4":7,"5":17,"6":4,"7":7,"8":17,"9":23,"10":17,"11":13,"12":16,"13":4,"14":64777,"15":64942,"16":4,"17":3881,"18":3968,"19":3968,"20":55,"21":55,"22":64612,"23":55,"24":165,"25":3881,"26":3968,"27":3881,"28":7936,"29":24,"30":923995,"31":306782},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[26,20],"4":[0,26],"5":[26,9],"6":[26,17],"7":[17,0],"8":[6,11],"9":[0,6],"10":[6,0],"11":[7,4],"12":[0,7],"13":[0,7],"14":[7,7],"15":[0,7],"16":[7,0],"17":[0,7],"18":[7,0],"19":[1,16],"20":[1,15],"21":[2,21],"22":[2,15],"23":[0,16],"24":[1,15],"25":[0,15],"26":[1,14],"27":[1,13],"28":[1,12],"29":[2,10],"30":[12,9],"31":[1,9],"32":[3881,60896],"33":[29,29,3794,29,87,0],"34":[3968,3968],"35":[87,7849],"36":[477095,446900],"37":[294344,152556],"38":[167,152947],"39":[114814,38133]},"inputSourceMap":{"version":3,"file":"/home/c/clee69/cs310/project/project_team086/src/controller/TransformationManipulations.ts","sources":["/home/c/clee69/cs310/project/project_team086/src/controller/TransformationManipulations.ts"],"names":[],"mappings":"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","sourcesContent":["import { ValidFields } from \"./ASTTree\";\nimport { InsightError } from \"./IInsightFacade\";\nimport Decimal from \"decimal.js\";\n\nexport const validApplyToken = new Set([\"MAX\", \"MIN\", \"AVG\", \"COUNT\", \"SUM\"]);\n\nconst numericFields = new Set([\"year\", \"avg\", \"pass\", \"fail\", \"audit\", \"lat\", \"lon\", \"seats\"]);\nexport function validateRooms(options: any): string {\n\t//iterate through column and validate\n\tconst columns = options.COLUMNS;\n\tconst order = options.ORDER;\n\tconst applyKeys = new Set<string>();\n\tlet datasetID: string | null = null;\n\n\t// validate columns, make sure only one dataset but can have applykeys so add those\n\tcolumns.forEach((column: any) => {\n\t\tif (column.includes(\"_\")) {\n\t\t\tconst [curDataset] = column.split(\"_\");\n\t\t\tif (datasetID && datasetID !== curDataset) {\n\t\t\t\tthrow new InsightError(\"Multiple datasets in columns\");\n\t\t\t}\n\n\t\t\tdatasetID = datasetID || curDataset;\n\t\t} else {\n\t\t\tapplyKeys.add(column);\n\t\t}\n\t});\n\t//validate order\n\tvalidateOrder(columns, order, applyKeys, datasetID);\n\n\tif (datasetID) {\n\t\treturn datasetID;\n\t} else {\n\t\treturn \"\";\n\t}\n}\n\nfunction validateOrder(columns: any, order: any, applyKeys: Set<string>, datasetID: string | null): void {\n\t//validate order\n\tif (typeof order === \"string\") {\n\t\tif (!columns.includes(order) && !applyKeys.has(order)) {\n\t\t\tthrow new InsightError(\"ORDER key must be part of COLUMNS or an apply key\");\n\t\t}\n\t} else if (typeof order === \"object\") {\n\t\tif (order.keys === undefined) {\n\t\t\tthrow new InsightError(\"No keys in order\");\n\t\t}\n\t\tif (order.dir !== \"UP\" && order.dir !== \"DOWN\") {\n\t\t\tthrow new InsightError(\"ORDER direction must be 'UP' or 'DOWN'\");\n\t\t}\n\t\tconst keys = order.keys;\n\t\tkeys.forEach((key: string) => {\n\t\t\tif (!columns.includes(key) && !applyKeys.has(key)) {\n\t\t\t\tthrow new InsightError(\"All ORDER keys must be part of COLUMNS or apply keys\");\n\t\t\t}\n\t\t\tif (key.includes(\"_\") && key.split(\"_\")[0] !== datasetID) {\n\t\t\t\tthrow new InsightError(\"ORDER keys must reference the same dataset as COLUMNS\");\n\t\t\t}\n\t\t});\n\t}\n}\nexport function applyValidation(query: any, datasetId: string): any {\n\tvalidateTransformations(query.OPTIONS, query.TRANSFORMATIONS, datasetId);\n}\n\nexport function transformResults(data: any, query: any): any {\n\tconst groups = query.TRANSFORMATIONS.GROUP.map((entry: any) => {\n\t\treturn entry.split(\"_\")[1];\n\t});\n\tconst groupedResults = createGroupings(data, groups);\n\tconst results = applyToGroups(groupedResults, query);\n\treturn results;\n}\n\nfunction validateTransformations(options: any, transformations: any, datasetID: string): void {\n\tconst columns = options.COLUMNS;\n\tconst group = transformations.GROUP;\n\tconst apply = transformations.APPLY;\n\tif (group === undefined) {\n\t\tthrow new InsightError(\"Missing group in transformation\");\n\t}\n\tif (apply === undefined) {\n\t\tthrow new InsightError(\"Missing apply in transformation\");\n\t}\n\n\tconst requestedKeys = new Set<string>();\n\t// parse through transformations and get all the keys\n\tgroup.forEach((key: string) => {\n\t\tif (!columns.includes(key)) {\n\t\t\tthrow new InsightError(\"Key not in columns\");\n\t\t}\n\t\trequestedKeys.add(key);\n\t});\n\tvalidateApply(apply, datasetID, requestedKeys, columns);\n\tcolumns.forEach((key: string) => {\n\t\tif (!requestedKeys.has(key)) {\n\t\t\tthrow new InsightError(\"Key not in columns\");\n\t\t}\n\t});\n}\n\nfunction validateApply(apply: any, datasetID: string, requestedKeys: Set<string>, columns: any): void {\n\tconst applyKeys: any[] = [];\n\tapply.forEach((obj: any) => {\n\t\tif (Object.keys(obj).length > 1) {\n\t\t\tthrow new InsightError(\"Too many keys in one apply rule\");\n\t\t}\n\t\tconst key = Object.keys(obj)[0];\n\t\tif (applyKeys.includes(key)) {\n\t\t\tthrow new InsightError(\"Duplicate apply keys\");\n\t\t}\n\t\tapplyKeys.push(key);\n\t\tconst applyRule: any = Object.entries(obj)[0][1];\n\t\tif (!validApplyToken.has(Object.keys(applyRule)[0])) {\n\t\t\tthrow new InsightError(\"Not valid apply token\");\n\t\t}\n\n\t\tconst applyQuery: string = Object.entries(applyRule)[0][1] as string;\n\t\tif (typeof applyQuery !== \"string\") {\n\t\t\tthrow new InsightError(\"Wrong type in apply\");\n\t\t}\n\t\tconst [curDataset, field] = applyQuery.split(\"_\");\n\t\tif (curDataset !== datasetID) {\n\t\t\tthrow new InsightError(\"Multiple datasets in apply field\");\n\t\t}\n\t\tif (!ValidFields.has(field)) {\n\t\t\tthrow new InsightError(\"Field is invalid\");\n\t\t}\n\t\tif (Object.keys(applyRule)[0] !== \"COUNT\" && !numericFields.has(field)) {\n\t\t\tthrow new InsightError(\"Wrong type for token in apply\");\n\t\t}\n\t\tif (!columns.includes(key)) {\n\t\t\tthrow new InsightError(\"Key not in columns\");\n\t\t}\n\t\trequestedKeys.add(key);\n\t});\n}\n\nfunction createGroupings(data: any, groups: any): Map<string, any[]> {\n\tconst groupings = new Map<string, any[]>();\n\tdata.forEach((entry: any) => {\n\t\tlet entryKey = \"\";\n\t\tgroups.forEach((group: any) => {\n\t\t\tentryKey += `${entry[group]}_`;\n\t\t});\n\t\tentryKey = entryKey.substring(0, entryKey.length - 1);\n\t\tif (!groupings.has(entryKey)) {\n\t\t\tgroupings.set(entryKey, []);\n\t\t}\n\t\tgroupings.get(entryKey)?.push(entry);\n\t});\n\n\treturn groupings;\n}\n\nfunction applyToGroups(groupedData: Map<string, any[]>, query: any): any[] {\n\tconst results: any[] = [];\n\tconst applyRules = query.TRANSFORMATIONS.APPLY;\n\tconst columns = query.OPTIONS.COLUMNS;\n\tconst groupFields = query.TRANSFORMATIONS.GROUP;\n\n\tfor (const [groupKey, entries] of groupedData.entries()) {\n\t\tconst aggregatedResult: any = applyAggregation(entries, applyRules);\n\t\tpopulateGroupFields(aggregatedResult, groupKey, groupFields);\n\t\tconst finalResult = constructFinalResult(aggregatedResult, columns);\n\t\tresults.push(finalResult);\n\t}\n\treturn results;\n}\n\nfunction applyAggregation(entries: any[], applyRules: any[]): any {\n\tconst aggregatedResult: any = {};\n\tapplyRules.forEach((applyRule: any) => {\n\t\tconst applyKey = Object.keys(applyRule)[0];\n\t\tconst [token, field] = Object.entries(applyRule[applyKey])[0] as [any, any];\n\t\taggregatedResult[applyKey] = calculateAggregation(token, field.split(\"_\")[1], entries);\n\t});\n\treturn aggregatedResult;\n}\n\nfunction calculateAggregation(token: string, field: string, entries: any[]): any {\n\tconst two = 2;\n\tswitch (token) {\n\t\tcase \"MAX\":\n\t\t\treturn Math.max(...entries.map((entry: any) => entry[field]));\n\t\tcase \"MIN\":\n\t\t\treturn Math.min(...entries.map((entry: any) => entry[field]));\n\t\tcase \"AVG\": {\n\t\t\tlet total = new Decimal(0);\n\t\t\tentries.forEach((entry: any) => (total = total.add(entry[field])));\n\t\t\treturn Number((total.toNumber() / entries.length).toFixed(two));\n\t\t}\n\t\tcase \"SUM\": {\n\t\t\tlet total = new Decimal(0);\n\t\t\tentries.forEach((entry: any) => (total = total.add(new Decimal(entry[field]))));\n\t\t\treturn Number(total.toFixed(two));\n\t\t}\n\t\tcase \"COUNT\": {\n\t\t\tconst uniqueValues = new Set(entries.map((entry: any) => entry[field]));\n\t\t\treturn uniqueValues.size;\n\t\t}\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown apply token: ${token}`);\n\t}\n}\n\nfunction populateGroupFields(aggregatedResult: any, groupKey: string, groupFields: any[]): void {\n\tconst groupKeyFields = groupKey.split(\"_\");\n\tgroupFields.forEach((groupField: string, index: number) => {\n\t\tconst originalField = groupField.split(\"_\")[1];\n\t\taggregatedResult[originalField] = groupKeyFields[index];\n\t});\n}\n\nfunction constructFinalResult(aggregatedResult: any, columns: string[]): any {\n\treturn columns.reduce((acc: any, column: string) => {\n\t\tconst field = column.includes(\"_\") ? column.split(\"_\")[1] : column;\n\t\tif (numericFields.has(field)) {\n\t\t\tconst value = Number(aggregatedResult[field]);\n\t\t\tacc[field] = value;\n\t\t} else {\n\t\t\tacc[field] = aggregatedResult[field];\n\t\t}\n\t\treturn acc;\n\t}, {});\n}\n\nexport function sortResults(array: any[], primaryField: string): any[] {\n\treturn [...array].sort((a: any, b: any) => {\n\t\tif (a[primaryField] < b[primaryField]) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (a[primaryField] > b[primaryField]) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tconst fields = Object.keys(a).filter((field) => field !== primaryField);\n\n\t\tfor (const field of fields) {\n\t\t\tif (a[field] < b[field]) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (a[field] > b[field]) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t});\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1c6154b45bc45680e183d429b195fa9254258788","contentHash":"0301f82637eb76a390caba2bd2908b1ac52fbc761a3ef6db270f47bd3db211d9"}}